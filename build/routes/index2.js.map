{"version":3,"sources":["../../src/routes/index2.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","uuid","cloudinary","config","cloud_name","api_key","api_secret","use","get","req","res","status","json","message","route","post","body","models","userModel","create","address","toLowerCase","error","console","log","put","userFromDB","findOne","updateOne","runValidators","query","user","lean","exec","existingOne","collectionModel","name","Error","owner","nftAddress","avatar","background","description","externalUrl","tokens","toString","_id","data","collection","delete","findOneAndDelete","collections","find","select","token","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","parseInt","includes","findOneAndUpdate","new","newUpdatedInfo","account","createAdmin","adminRegisterModel","walletAddress","save","send","adminData","then","sign","cookie","expires","Date","now","catch","err","nftdata","nftControllerModel","header","createNft","price","metadata","imageUrl","externalLink","tokenUri","join","__dirname","filePath","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","upload","storage","single","v2","uploader","folder","result","uploadslider","uploadSliderModel","slider","link","url","filterData","$text","$search","users","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nvar uuid = require('uuid');\r\nconst cloudinary=require('cloudinary');\r\n\r\n// Keys For cloudinary\r\ncloudinary.config({\r\n  cloud_name: \"dscolw4gq\",\r\n  api_key: \"541579474534226\",\r\n  api_secret: \"VrR4OzZXjU2NzrCnSx8mv8fRM2Q\",\r\n});\r\n\r\nroutes.use(cookieParser())\r\n\r\nroutes.get(\"/\", (req, res) => {\r\n  res.status(200).json({ message: \"Connected!\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.userModel.create({\r\n        ...body,\r\n        address: body.address.toLowerCase(),\r\n      });\r\n      res.status(200).json(\"Successfully registered\");\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address: body.address.toLowerCase(),\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.updateOne(\r\n          { address: body.address.toLowerCase() },\r\n          { ...body, address: body.address.toLowerCase() },\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    const address = req.query.address;\r\n    const user = await models.userModel\r\n      .findOne({ address: address.toLowerCase() })\r\n      .lean()\r\n      .exec();\r\n    res.status(200).json({ ...user });\r\n  });\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      if (existingOne) {\r\n        throw new Error(\"Already Exist name\");\r\n      }\r\n      await models.collectionModel.create({\r\n        name: body.name,\r\n        owner: body.owner?.toLowerCase(),\r\n        nftAddress: body.nftAddress?.toLowerCase(),\r\n        avatar: body.avatar,\r\n        background: body.background,\r\n        description: body.description,\r\n        externalUrl: body.externalUrl,\r\n        tokens: body.tokens || [],\r\n      });\r\n      res.status(200).json(\"Successfully created!\");\r\n    } catch (error) {\r\n      console.log(\"[collection post] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log(\"aj : **** body => \", body);\r\n      const existingOne = await models.collectionModel.findOne({\r\n        _id: body._id,\r\n      });\r\n      if (!existingOne) {\r\n        throw new Error(\"No exist id\");\r\n      }\r\n      let data = {\r\n        name: body.name?.toLowerCase(),\r\n      };\r\n      if (!!body.avatar) {\r\n        data = { ...data, avatar: body.avatar };\r\n      }\r\n      if (!!body.background) {\r\n        data = { ...data, background: body.background };\r\n      }\r\n      if (!!body.description) {\r\n        data = { ...data, description: body.description };\r\n      }\r\n      if (!!body.externalUrl) {\r\n        data = { ...data, externalUrl: body.externalUrl };\r\n      }\r\n      if (!!body.tokens) {\r\n        data = { ...data, tokens: body.tokens };\r\n      }\r\n      await models.collectionModel.updateOne({ _id: body._id }, data);\r\n      res.status(200).json(\"Successfully updated!\");\r\n    } catch (error) {\r\n      console.log(\"[collection put] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      console.log(\"[collection get] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n    }\r\n  });\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = req.query.owner?.toLowerCase();\r\n    const collections = await models.collectionModel\r\n      .find({ owner })\r\n      .lean()\r\n      .exec();\r\n    console.log(\"aj : ***** collections => \", collections);\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      const tokens = collection.tokens\r\n        ? [...collection.tokens, body.token]\r\n        : [body.token];\r\n      await models.collectionModel.updateOne({ name: body.name }, { tokens });\r\n      res.status(200).json(\"success\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n\r\n      const obj = await models.viewAndLikeModel\r\n        .findOne({ tokenAddr, tokenId })\r\n        .lean()\r\n        .exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] get error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: body.tokenAddr,\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            throw new Error(\"Already viewed\");\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            throw new Error(\"Already Liked\");\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        // if (parseInt(body.views) === parseInt(obj.views)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n\r\n        //LIKE\r\n        // if (parseInt(body.likes) !== parseInt(obj.likes)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n        // if (parseInt(body.likes) === parseInt(obj.likes)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n\r\n        //BODY VIEWS < DB VIEWS ? 1 < 2 ? THEN CHECK THE ARRAY AND FILTER IT\r\n        // if (parseInt(body.views) < parseInt(obj.views)) {\r\n        //   console.log(\"BEFORE :\" + obj.viewedAddresses);\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) !== []\r\n        //       ? [...obj.viewedAddresses, body.address?.toLowerCase()]\r\n        //       : [];\r\n        // }\r\n        // else if (\r\n        //   parseInt(body.views) === parseInt(obj.views) ||\r\n        //   parseInt(body.views) === 0\r\n        // ) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n\r\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else {\r\n        //   const addresses = [\r\n        //     ...obj.viewedAddresses,\r\n        //     body.address?.toLowerCase(),\r\n        //   ];\r\n\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // }\r\n\r\n        // if (parseInt(body.likes) > parseInt(obj.likes)) {\r\n        //   console.log(\"LIKES\");\r\n        //   if (obj.likedAccounts?.includes(body.address)) {\r\n        //     console.log(\"LIKE INCLUDED\");\r\n        //     throw new Error(\"Already liked\");\r\n        //   } else {\r\n        //     console.log(\"LIKE NOT INCLUDED\");\r\n        //   }\r\n        // }\r\n        // if (parseInt(body.views) < parseInt(obj.views)) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n        //   console.log({ addresses });\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else if (\r\n        //   parseInt(body.views) === parseInt(obj.views) ||\r\n        //   parseInt(body.views) === 0\r\n        // ) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n\r\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else {\r\n        //   const addresses = [\r\n        //     ...obj.viewedAddresses,\r\n        //     body.address?.toLowerCase(),\r\n        //   ];\r\n\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // }\r\n        // if (parseInt(body.likes) < parseInt(obj.likes)) {\r\n        //   console.log(\"I AM LESS\");\r\n        //   const addresses =\r\n        //     obj.likedAccounts?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) || [];\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // } else if (\r\n        //   parseInt(body.likes) === parseInt(obj.likes) ||\r\n        //   parseInt(body.likes) === 0\r\n        // ) {\r\n        //   const addresses = obj.likedAccounts?.filter(\r\n        //     (v) => v !== body.address?.toLowerCase()\r\n        //   );\r\n        //   console.log({ addresses });\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // } else {\r\n        //   console.log(\"I AM + 1\");\r\n        //   const addresses = [...obj.likedAccounts, body.address?.toLowerCase()];\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: body.tokenAddr?.toLowerCase(), tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: body.tokenAddr?.toLowerCase(),\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] post error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n\r\nroutes.post(\"/admin-register\",(req, res) => {\r\n  if(req.body.account){\r\n    let createAdmin=new models.adminRegisterModel({\r\n      walletAddress: req.body.account,\r\n    })\r\n    createAdmin.save(function(){\r\n      res.send(\"Admin Stored Succcesfully\");\r\n    });\r\n  }\r\n  else{\r\n    res.status.send(\"address are empty\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",(req, res) => {\r\n  let adminData=models.adminRegisterModel.findOne({walletAddress:req.body.account});\r\n  adminData.exec()\r\n  .then((data)=>{\r\n    if(data){\r\n      const token=jwt.sign({walletAddress:req.body.account},\"walletaddress12345678123456781234\")\r\n      res.cookie('closedSeaAdmin',token,{expires:new Date(Date.now()+6000000)})\r\n      res.status(200).send(\"Sucessfull Login\")\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  })\r\n  .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.get(\"/nft-collector\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.header( \"Access-Control-Allow-Origin\" );\r\n    res.send(data);\r\n  })\r\n  .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n    let createNft=new models.nftControllerModel({\r\n        tokenAddr: req.body.tokenAddr,\r\n        tokenId: req.body.tokenId,\r\n        price: req.body.price,\r\n        metadata: {\r\n            imageUrl:req.body.metadata.imageUrl,\r\n            name:req.body.metadata.name,\r\n            description:req.body.metadata.description,\r\n            externalLink:req.body.metadata.externalLink\r\n          },\r\n        tokenUri:req.body.tokenUri\r\n    })\r\n    createNft.save(function(){\r\n      res.send(\"done\");\r\n    });\r\n})\r\n\r\nconsole.log(path.join(__dirname,\"../\",\"../public/sliderimage/\"))\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n\r\nroutes.post(\"/upload_slider\",upload,(req,res)=>{\r\n  console.log(req.file);\r\n    cloudinary.v2.uploader.upload(req.file.path,{folder: 'closedsea'},function(error, result){\r\n      if (error) throw error;\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({slider:req.body.slider},{\r\n          link: req.body.link,\r\n          imageUrl:result.url\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          console.log(`File uploaded successfully`)\r\n          res.status(200).json({message:\"Success\"})\r\n      })  \r\n  });\r\n});\r\n\r\nroutes.get(\"/getsliders\",(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  console.log(req.query);\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    // const resp = await models.userModel.find({\r\n    //   username: \"OneDabLife \",\r\n    // });\r\n    const collections = await models.collectionModel.find({\r\n      $text: { $search: name },\r\n    });\r\n    const users = await models.userModel.find({ $text: { $search: name } });\r\n\r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });\r\n    // const obj = await models.viewAndLikeModel\r\n    //   .findOne({ tokenAddr, tokenId })\r\n    //   .lean()\r\n    //   .exec();\r\n  } catch (error) {\r\n    console.log(\"Search Error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index2.js"}