{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","use","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","get","req","res","status","message","route","post","body","models","userModel","create","address","toLowerCase","error","console","log","put","userFromDB","findOne","updateOne","runValidators","query","user","lean","exec","find","err","data","existingOne","collectionModel","name","Error","owner","nftAddress","avatar","background","description","externalUrl","tokens","toString","_id","collection","delete","findOneAndDelete","profilefilePath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadImage","storage","single","undefined","readFile","params","Bucket","Key","fname","ACL","ContentType","mimetype","Body","upload","s3Err","collections","select","token","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","parseInt","includes","findOneAndUpdate","new","newUpdatedInfo","viewAndLike","then","send","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","nft","push","setTimeout","viewedNft","view","follower","$push","following","account","createAdmin","adminRegisterModel","walletAddress","save","adminData","sign","cookie","expires","Date","now","header","filterData","updateNft","price","createNft","metadata","imageUrl","externalLink","selectedCat","tokenUri","filePath","link","uploadSliderModel","countDocuments","documents","msg","uploadslider","Location","id","url","q","split","deleteSlider","deleteObject","$regex","$options","users","userName","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\nconst routes = require(\"express\").Router();\nconst jwt=require(\"jsonwebtoken\")\nconst multer = require(\"multer\");\nvar cookieParser = require('cookie-parser')\nconst path=require(\"path\");\nconst bodyParser=require(\"body-parser\");\nvar uuid = require('uuid');\nconst fs = require('fs');\nconst AWS = require('aws-sdk')\n\nroutes.use(cookieParser())\n\n// Body Parsers\nroutes.use(bodyParser.urlencoded({ extended: false }));\nroutes.use(bodyParser.json());\n\nconst s3 = new AWS.S3({\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\n  secretAccessKey: \"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\"\n});\n\nroutes.get(\"/\", (req, res) => {\n  res.status(200).json({ message: \"Connected!\" });\n});\n\nroutes\n  .route(\"/profile\")\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      await models.userModel.create({\n        ...body,\n        address: body.address.toLowerCase(),\n      });\n      res.status(200).json(\"Successfully registered\");\n    } catch (error) {\n      console.log(\"[profile post] error => \", error);\n      res.status(500).json({ message: \"Server Error\" });\n    }\n  })\n  .put(async (req, res) => {\n    try {\n      const { body } = req;\n      const userFromDB = await models.userModel.findOne({\n        address: body.address.toLowerCase(),\n      });\n      if (userFromDB) {\n        await models.userModel.updateOne(\n          { address: body.address.toLowerCase() },\n          { ...body, address: body.address.toLowerCase() },\n          { runValidators: true }\n        );\n        res.status(200).json(\"Successfully updated\");\n      } else {\n        res.status(500).json({ message: \"User not registered yet.\" });\n      }\n    } catch (error) {\n      console.log(\"[profile post] error => \", error);\n      res.status(500).json({ message: \"Server Error\" });\n    }\n  })\n  .get(async (req, res) => {\n    const address = req.query.address;\n    const user = await models.userModel\n      .findOne({ address: address.toLowerCase() })\n      .lean()\n      .exec();\n    res.status(200).json({ ...user });\n  });\n\nroutes.get(\"/get-all-users\", (req, res) => {\n    let user = models.userModel.find();\n    user.exec((err,data)=>{\n      res.status(200).json({data});\n    })\n});\n\nroutes\n  .route(\"/collection\")\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      const existingOne = await models.collectionModel.findOne({\n        name: body.name,\n      });\n      if (existingOne) {\n        throw new Error(\"Already Exist name\");\n      }\n      await models.collectionModel.create({\n        name: body.name,\n        owner: body.owner?.toLowerCase(),\n        nftAddress: body.nftAddress?.toLowerCase(),\n        avatar: body.avatar,\n        background: body.background,\n        description: body.description,\n        externalUrl: body.externalUrl,\n        tokens: body.tokens || [],\n      });\n      res.status(200).json(\"Successfully created!\");\n    } catch (error) {\n      console.log(\"[collection post] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .put(async (req, res) => {\n    try {\n      const { body } = req;\n      console.log(\"aj : **** body => \", body);\n      const existingOne = await models.collectionModel.findOne({\n        _id: body._id,\n      });\n      if (!existingOne) {\n        throw new Error(\"No exist id\");\n      }\n      let data = {\n        name: body.name?.toLowerCase(),\n      };\n      if (!!body.avatar) {\n        data = { ...data, avatar: body.avatar };\n      }\n      if (!!body.background) {\n        data = { ...data, background: body.background };\n      }\n      if (!!body.description) {\n        data = { ...data, description: body.description };\n      }\n      if (!!body.externalUrl) {\n        data = { ...data, externalUrl: body.externalUrl };\n      }\n      if (!!body.tokens) {\n        data = { ...data, tokens: body.tokens };\n      }\n      await models.collectionModel.updateOne({ _id: body._id }, data);\n      res.status(200).json(\"Successfully updated!\");\n    } catch (error) {\n      console.log(\"[collection put] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .get(async (req, res) => {\n    try {\n      const name = req.query.name;\n      const collection = await models.collectionModel\n        .findOne({ name })\n        .lean()\n        .exec();\n      res.status(200).json({ ...collection });\n    } catch (error) {\n      console.log(\"[collection get] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .delete(async (req, res) => {\n    try {\n      const { body } = req;\n      const existingOne = await models.collectionModel.findOneAndDelete({\n        _id: body._id,\n      });\n      return res.status(200).json(\"Successfully deleted\");\n    } catch (error) {\n      console.log(\"[collection delete] error => \", error);\n    }\n  });\n\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\n\n// for file upload\nvar Storage=multer.diskStorage({\n  destination:profilefilePath,\n  filename:(req,file,cb)=>{\n    cb(null,uuid.v4()+path.extname(file.originalname))\n  }\n})\n\nvar uploadImage=multer({\n  storage:Storage\n}).single('file');\n \nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\n  if(req.file == undefined){\n    res.status(\"400\").json({message:\"Image is Required\"})\n  }\n  else{\n      fs.readFile(req.file.path, (err, data) => {\n        if (err) throw err;\n        const params = {\n            Bucket: 'closedsea', // pass your bucket name\n            Key: req.body.fname, // file will be saved\n            ACL: \"public-read\",\n            ContentType: req.file.mimetype,\n            Body: data\n        };\n        s3.upload(params, function(s3Err, data) {\n            if (s3Err) throw s3Err\n            res.status(200).json(data);\n        });\n      });\n    }\n})\n\nroutes.get(\"/collection-names\", async (req, res) => {\n  try {\n    const collections = await models.collectionModel\n      .find({})\n      .select(\"name -_id\")\n      .exec();\n    res.status(200).json(collections);\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes.get(\"/my-collections\", async (req, res) => {\n  try {\n    const owner = req.query.owner?.toLowerCase();\n    const collections = await models.collectionModel\n      .find({ owner })\n      .lean()\n      .exec();\n    console.log(\"aj : ***** collections => \", collections);\n    res.status(200).json(collections);\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\n  try {\n    const { body } = req;\n    const collection = await models.collectionModel\n      .find({ name: body.name })\n      .lean()\n      .exec();\n    if (collection) {\n      const tokens = collection.tokens\n        ? [...collection.tokens, body.token]\n        : [body.token];\n      await models.collectionModel.updateOne({ name: body.name }, { tokens });\n      res.status(200).json(\"success\");\n    }\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes\n  .route(\"/view-and-like\")\n  .get(async (req, res) => {\n    try {\n      const { tokenAddr, tokenId } = req.query;\n\n      const obj = await models.viewAndLikeModel\n        .findOne({ tokenAddr, tokenId })\n        .lean()\n        .exec();\n\n      if (obj) {\n        res.status(200).json({ ...obj });\n      } else {\n        res.status(200).json({\n          views: 0,\n          likes: 0,\n          tokenAddr,\n          tokenId,\n          likedAccounts: [],\n          viewedAddresses: [],\n        });\n      }\n    } catch (error) {\n      console.log(\"[view and like] get error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      console.log({ body });\n      const obj = await models.viewAndLikeModel.findOne({\n        tokenAddr: body.tokenAddr,\n        tokenId: body.tokenId,\n      });\n      console.log({ obj });\n      if (obj) {\n        // update\n\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\n        if (\n          (parseInt(body.views) !== parseInt(obj.views) &&\n            parseInt(body.views) !== 0) ||\n          (parseInt(body.views) === parseInt(obj.views) &&\n            parseInt(body.views) !== 0)\n        ) {\n          if (obj.viewedAddresses?.includes(body.address)) {\n            throw new Error(\"Already viewed\");\n          } else {\n            await models.viewAndLikeModel.findOneAndUpdate(\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\n              { new: true }\n            );\n          }\n        }\n\n        if (\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\n            parseInt(body.likes) !== 0) ||\n          (parseInt(body.likes) === parseInt(obj.likes) &&\n            parseInt(body.likes) !== 0)\n        ) {\n          if (obj.likedAccounts?.includes(body.address)) {\n            throw new Error(\"Already Liked\");\n          }\n          //else if\n          else {\n            await models.viewAndLikeModel.findOneAndUpdate(\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n              { likedAccounts: [...obj.likedAccounts, body.address] },\n              { new: true }\n            );\n          }\n        }\n\n        // if (parseInt(body.views) === parseInt(obj.views)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n\n        //LIKE\n        // if (parseInt(body.likes) !== parseInt(obj.likes)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n        // if (parseInt(body.likes) === parseInt(obj.likes)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n\n        //BODY VIEWS < DB VIEWS ? 1 < 2 ? THEN CHECK THE ARRAY AND FILTER IT\n        // if (parseInt(body.views) < parseInt(obj.views)) {\n        //   console.log(\"BEFORE :\" + obj.viewedAddresses);\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) !== []\n        //       ? [...obj.viewedAddresses, body.address?.toLowerCase()]\n        //       : [];\n        // }\n        // else if (\n        //   parseInt(body.views) === parseInt(obj.views) ||\n        //   parseInt(body.views) === 0\n        // ) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else {\n        //   const addresses = [\n        //     ...obj.viewedAddresses,\n        //     body.address?.toLowerCase(),\n        //   ];\n\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // }\n\n        // if (parseInt(body.likes) > parseInt(obj.likes)) {\n        //   console.log(\"LIKES\");\n        //   if (obj.likedAccounts?.includes(body.address)) {\n        //     console.log(\"LIKE INCLUDED\");\n        //     throw new Error(\"Already liked\");\n        //   } else {\n        //     console.log(\"LIKE NOT INCLUDED\");\n        //   }\n        // }\n        // if (parseInt(body.views) < parseInt(obj.views)) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n        //   console.log({ addresses });\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else if (\n        //   parseInt(body.views) === parseInt(obj.views) ||\n        //   parseInt(body.views) === 0\n        // ) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else {\n        //   const addresses = [\n        //     ...obj.viewedAddresses,\n        //     body.address?.toLowerCase(),\n        //   ];\n\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // }\n        // if (parseInt(body.likes) < parseInt(obj.likes)) {\n        //   console.log(\"I AM LESS\");\n        //   const addresses =\n        //     obj.likedAccounts?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) || [];\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // } else if (\n        //   parseInt(body.likes) === parseInt(obj.likes) ||\n        //   parseInt(body.likes) === 0\n        // ) {\n        //   const addresses = obj.likedAccounts?.filter(\n        //     (v) => v !== body.address?.toLowerCase()\n        //   );\n        //   console.log({ addresses });\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // } else {\n        //   console.log(\"I AM + 1\");\n        //   const addresses = [...obj.likedAccounts, body.address?.toLowerCase()];\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // }\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\n          { tokenAddr: body.tokenAddr?.toLowerCase(), tokenId: body.tokenId },\n          {\n            views: obj.views + body.views,\n            likes: obj.likes + body.likes,\n          },\n          { new: true }\n        );\n        res.status(200).json(newUpdatedInfo);\n      } else {\n        await models.viewAndLikeModel.create({\n          tokenAddr: body.tokenAddr?.toLowerCase(),\n          tokenId: body.tokenId,\n          views: body.views > 0 ? 1 : 0,\n          likes: body.likes > 0 ? 1 : 0,\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\n        });\n      }\n    } catch (error) {\n      console.log(\"[view and like] post error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  });\n\nroutes.get(\"/views_and_likes\",(req, res) => {\n    var viewAndLike=models.viewAndLikeModel.find();\n    viewAndLike.exec()\n    .then((data)=>{\n      res.send(data);\n    })\n    .catch((err)=>console.log(err))\n})\n\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\n  let likedNft =[];\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\n    like.exec((err,data)=>{\n      data.forEach(function(token){\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\n        nftdata.exec((err,nft)=>{\n          if (err) throw err\n          likedNft.push(nft)\n        })\n      })\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\n    })\n})\n\n\n\nroutes.post(\"/usersviews\",(req, res) => {\n  let viewedNft =[];\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\n    view.exec((err,data)=>{\n      data.forEach(function(token){\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\n        nftdata.exec((err,nft)=>{\n          if (err) throw err\n          viewedNft.push(nft)\n        })\n      })\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\n    })\n})\n\nroutes.post(\"/users_follow\",(req, res) => {\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\n    $push: {'follower': req.body.following}\n  })\n  follower.exec((err)=>{\n    if(err) throw err;\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\n      $push: {'following': req.body.follower}\n    })\n    following.exec((err)=>{\n      if(err) throw err;\n      res.send(\"success\")\n    })\n  })\n})\n\nroutes.post(\"/admin-register\",(req, res) => {\n  if(req.body.account){\n    let createAdmin=new models.adminRegisterModel({\n      walletAddress: req.body.account,\n    })\n    createAdmin.save(function(){\n      res.send(\"Admin Stored Succcesfully\");\n    });\n  }\n  else{\n    res.status.send(\"address are empty\")\n  }\n})\n\nroutes.post(\"/admin-login\",(req, res) => {\n  let adminData=models.adminRegisterModel.findOne({walletAddress:req.body.account});\n  adminData.exec()\n  .then((data)=>{\n    if(data){\n      const token=jwt.sign({walletAddress:req.body.account},\"walletaddress12345678123456781234\")\n      res.cookie('closedSeaAdmin',token,{expires:new Date(Date.now()+6000000)})\n      res.status(200).send(\"Sucessfull Login\")\n    }\n    else{\n      res.status(400).send(\"Wallet Not Found\")\n    }\n  })\n  .catch((err)=>console.log(err))\n})\n\nroutes.get(\"/nft-collector\",(req, res) => {\n  var nftdata=models.nftControllerModel.find();\n  nftdata.exec()\n  .then((data)=>{\n    res.header( \"Access-Control-Allow-Origin\" );\n    res.send(data);\n  })\n  .catch((err)=>console.log(err))\n})\n\nroutes.post(\"/nft-collector\",(req, res) => {\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\n  filterData.exec((err,data)=>{\n    if (err) throw err;\n    if(data!==undefined){\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\n        price: req.body.price,\n      })\n      updateNft.exec((err)=>{\n        if(err) throw err;\n        res.status(200).json({message:\"Success\"})\n      })\n    }\n    else{\n      let createNft=new models.nftControllerModel({\n        tokenAddr: req.body.tokenAddr,\n        tokenId: req.body.tokenId,\n        price: req.body.price,\n        metadata: {\n            imageUrl:req.body.metadata.imageUrl,\n            name:req.body.metadata.name,\n            description:req.body.metadata.description,\n            externalLink:req.body.metadata.externalLink\n          },\n        selectedCat:req.body.selectedCat,\n        tokenUri:req.body.tokenUri,\n        status:\"pending\"\n      })\n      createNft.save(function(){\n        res.status(200).json({message:\"Success\"})\n    });\n    }\n})\n\n})\n\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\n\n// for file upload\nvar Storage=multer.diskStorage({\n  destination:filePath,\n  filename:(req,file,cb)=>{\n    cb(null,uuid.v4()+path.extname(file.originalname))\n  }\n})\n\nvar upload=multer({\n  storage:Storage\n}).single('pic');\n \n\nroutes.post(\"/add_slider\",upload,(req,res)=>{\n  if(req.file == undefined){\n    res.status(\"400\").json({message:\"Image is Required\"})\n  }\n  else if(req.body.link == undefined){\n    res.status(\"400\").json({message:\"Link is Required\"})\n  }\n  else{\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\n      if(documents==10){\n        res.status(202).json({msg:\"slider limit exceed\"})\n      }\n      else{\n      fs.readFile(req.file.path, (err, data) => {\n        if (err) throw err;\n        const params = {\n            Bucket: 'closedsea', // pass your bucket name\n            Key: req.file.filename, // file will be saved\n            ACL: \"public-read\",\n            ContentType: req.file.mimetype,\n            Body: data\n        };\n        s3.upload(params, function(s3Err, data) {\n            if (s3Err) throw s3Err\n            let uploadslider= new models.uploadSliderModel({\n              link: req.body.link,\n              imageUrl:data.Location\n            })\n            uploadslider.save((err)=>{\n              if(err) throw err;\n              console.log(`File uploaded successfully at ${data.Location}`)\n              res.status(200).json({message:\"Success\"})\n            })\n        });\n      });\n    }\n});\n}\n});\n\nroutes.post(\"/update_slider\",upload,(req,res)=>{\n  if(req.file == undefined){\n    res.status(400).json({message:\"Image is Required\"})\n  }\n  else if(req.body.link == undefined){\n    res.status(400).json({message:\"Link is Required\"})\n  }\n  else{\n  console.log(req.file);\n  fs.readFile(req.file.path, (err, data) => {\n    if (err) throw err;\n    const params = {\n        Bucket: 'closedsea', // pass your bucket name\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\n        ACL: \"public-read\",\n        ContentType: req.file.mimetype,\n        Body: data\n    };\n    s3.upload(params, function(s3Err, data) {\n        if (s3Err) throw s3Err\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\n          link: req.body.link,\n          imageUrl:data.Location\n        })\n        uploadslider.exec((err)=>{\n          if(err) throw err;\n          console.log(`File uploaded successfully at ${data.Location}`)\n          res.status(200).json({message:\"Success\"})\n        })\n    });\n });\n}\n});\n\nroutes.delete(\"/delete_slider/:id\",upload,(req,res)=>{\n  let url=req.query.q.split(\".com/\")[1] ;\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\n  s3.deleteObject({\n    Bucket: \"closedsea\",\n    Key: url\n  },function (err,data){\n    deleteSlider.exec(function(err){\n      if(err) throw err;\n      res.status(200).json({message:\"Successfully deleted\"})\n  })\n  })\n});\n\nroutes.get(\"/getsliders\",(req,res)=>{\n  let filterData=models.uploadSliderModel.find();\n  filterData.exec(function(err,data){\n    if(err) throw err;\n    if(data){\n      res.status(200).json(data)\n    }\n  });\n})\n\nroutes.route(\"/search\").get(async (req, res) => {\n  try {\n    const { name } = req.query;\n    console.log(name);\n    // const resp = await models.userModel.find({\n    //   username: \"OneDabLife \",\n    // });\n    if(name){\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\n    \n    res.status(200).json({\n      message: \"success\",\n\n      data: {\n        collections,\n        users,\n      },\n    });}\n    else{\n      res.status(200).json({\n        message: \"success\",\n  \n        data: {\n          collections:\"\",\n          users:\"\"\n        }\n    })\n  }\n    // const obj = await models.viewAndLikeModel\n    //   .findOne({ tokenAddr, tokenId })\n    //   .lean()\n    //   .exec();\n  } catch (error) {\n    console.log(\"Search Error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nmodule.exports = routes;"],"file":"index.js"}