{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","secret","use","apiAuth","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","auth","req","res","next","authHeader","header","token","decode","status","message","startsWith","substring","length","verify","err","walletAddress","decryptedData","models","adminRegisterModel","findOne","exec","get","route","post","body","check","userModel","address","console","log","undefined","userName","description","avatar","background","twitter","facebook","instagram","isVerified","save","error","put","userFromDB","findOneAndUpdate","runValidators","query","user","lean","isverified","VerifiedCollection","find","data","existingOne","collectionModel","name","tokenUpdate","$push","parseInt","tokens","send","create","owner","toLowerCase","nftAddress","externalUrl","_id","updateOne","collection","delete","findOneAndDelete","toString","$each","featureCollectionPath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadcoll","storage","single","link","readFile","params","Bucket","Key","ACL","ContentType","mimetype","Body","upload","filterFeatureCollection","uploadfeaturemodel","collection_name","imageUrl","Location","profilefilePath","uploadImage","fname","s3Err","collections","select","tokenId","tokenAddress","$elemMatch","tokenAddr","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","includes","new","newUpdatedInfo","viewAndLike","then","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","nft","push","setTimeout","noti","notificationmodel","viewedNft","view","follower","following","followers","map","userdata","fdata","msg","followings","email","adminData","createAdmin","jwtData","expiresIn","sign","chainId","decimal","hexa","String","Nft","tokenIds","i","findNft","id","nftToken","Object","keys","filterData","updateNft","price","ownerOf","selectedCat","isOnSell","createNft","metadata","tokenUri","relatedCollectionId","$and","$ne","externalNft","nfts","storeNFT","limitedNft","$regex","$options","skip","page","size","limit","countDocuments","count","totalPage","Math","ceil","aggregate","$match","$lookup","from","let","pipeline","$expr","$eq","as","$unwind","$addFields","$facet","$skip","$limit","Total","$group","$sum","mostLikedNft","leastLikedNft","$gt","startPrice","$lt","endPrice","errs","sort","$natural","featured","documents","isFeatured","category","isMarketPlace","filePath","uploadSliderModel","uploadslider","url","q","split","deleteSlider","deleteObject","users","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nconst bodyParser=require(\"body-parser\");\r\nvar uuid = require('uuid');\r\nconst fs = require('fs');\r\nconst AWS = require('aws-sdk')\r\nconst secret=\"1b4b2481e997ff0b8be28106f97040aa d4cb154b4a0b7e135354946c2b572110 b5d60d263e8e9596acd942a9402b23e0 e2705442w261f902b08fa9d220e3c906037 b8184ea414e848d2323838b30367703be82e c4e417215bb9dsddd4d231a8df5799d7f84 eb3e951fd15ae401513b56c684514ea3\";\r\nroutes.use(cookieParser())\r\nconst apiAuth=require(\"./middleware\")\r\n\r\n// Body Parsers\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(bodyParser.json());\r\n\r\nconst s3 = new AWS.S3({\r\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\r\n  secretAccessKey: \"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\"\r\n});\r\n\r\n// routes.use(apiAuth.userAuth)\r\n\r\nasync function auth(req, res, next) {\r\n  var authHeader = req.header('authorization');\r\n  let token,decode;\r\n  if (!authHeader){\r\n    res.status(500).json({message:\"Token is not defined\"})\r\n  } \r\n  else if (authHeader.startsWith(\"Bearer \")){\r\n    token = authHeader.substring(7, authHeader.length);\r\n    jwt.verify(token, secret, async function(err, decode) {\r\n      if (err) {\r\n        res.status(400).json({message:\"You Token is expired\"})\r\n      }\r\n      else{\r\n        if(decode?.walletAddress){\r\n          var decryptedData = await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+decode.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n          if(decryptedData){\r\n            next()\r\n          }\r\n          else{\r\n            res.status(400).json({message:\"You are not authorized person\"})\r\n          }\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Your token is not valid/expired\"})\r\n        }\r\n      }\r\n    });\r\n  } \r\n  else {\r\n    jwt.verify(token, secret, async function(err, decode) {\r\n      if (err) {\r\n        res.status(400).json({message:\"You Token is expired\"})\r\n      }\r\n      else{\r\n        if(decode?.walletAddress){\r\n          var decryptedData = await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+decode.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n          if(decryptedData){\r\n            next()\r\n          }\r\n          else{\r\n            res.status(400).json({message:\"You are not authorized person\"})\r\n          }\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Your token is not valid/expired\"})\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nroutes.get(\"/\", (req, res) => {\r\n  res.status(200).json({ message: \"Connected!\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      let check = await models.userModel.findOne({address: {'$regex' : '^'+body.address+'$', \"$options\": \"i\"}}).exec();\r\n      console.log(check)\r\n      if(check !== null && check !== undefined){\r\n        res.status(200).json({ message: \"This wallet address is already exist\" });\r\n      }\r\n      else{\r\n        await new models.userModel({\r\n          address: body.address,\r\n          userName: body.userName,\r\n          description: body.description,\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          twitter: body.twitter,\r\n          facebook:body.facebook,\r\n          instagram: body.instagram,\r\n          isVerified:body.isVerified\r\n        }).save();\r\n        res.status(200).json(\"Successfully registered\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\",error:error.message });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"},\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.findOneAndUpdate({address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"}},{ ...body},\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try{\r\n      const address = req.query.address;\r\n      const user = await models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}}).lean().exec();\r\n      res.status(200).json({ ...user });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\n  routes.post(\"/verified_user\",(req,res)=>{\r\n    try{ \r\n      if(!req.body.address || req.body.isverified == undefined){\r\n        res.status(500).json({message:\"Parameters are wrong\"})\r\n      }\r\n      else{\r\n        let VerifiedCollection= models.userModel.findOneAndUpdate({address:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}},{\r\n          isVerified: req.body.isverified\r\n        })\r\n        VerifiedCollection.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Successfully Verified\"})\r\n        })\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nroutes.get(\"/get-all-users\", (req, res) => {\r\n  try{\r\n    let user = models.userModel.find();\r\n    user.exec((err,data)=>{\r\n      res.status(200).json({data});\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      \r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens.tokenId': parseInt(body.tokens)}\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          tokens: {\"tokenId\":parseInt(body.tokens)} || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({_id: body._id,}).lean().exec();\r\n      if (!existingOne) {\r\n        return res.status(500).json(\"No exist id\");\r\n      }\r\n      else{\r\n        let data = {\r\n          name: body.name\r\n        };\r\n        if (!!body.avatar) {\r\n          data = { ...data, avatar: body.avatar };\r\n        }\r\n        if (!!body.background) {\r\n          data = { ...data, background: body.background };\r\n        }\r\n        if (!!body.description) {\r\n          data = { ...data, description: body.description };\r\n        }\r\n        if (!!body.externalUrl) {\r\n          data = { ...data, externalUrl: body.externalUrl };\r\n        }\r\n        if (!!body.tokens) {\r\n          data = { ...data, tokens: body.tokens };\r\n        }\r\n        await models.collectionModel.updateOne({ _id: body._id }, data);\r\n        res.status(200).json(\"Successfully updated!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n\r\n// Version 2 of Collection API\r\nroutes\r\n  .route(\"/collection/v2\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n\r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens':{ $each: body.tokens}}\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          tokens: body.tokens || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({_id: body._id,}).lean().exec();\r\n      if (!existingOne) {\r\n        return res.status(500).json(\"No exist id\");\r\n      }\r\n      else{\r\n        let data = {\r\n          name: body.name\r\n        };\r\n        if (!!body.avatar) {\r\n          data = { ...data, avatar: body.avatar };\r\n        }\r\n        if (!!body.background) {\r\n          data = { ...data, background: body.background };\r\n        }\r\n        if (!!body.description) {\r\n          data = { ...data, description: body.description };\r\n        }\r\n        if (!!body.externalUrl) {\r\n          data = { ...data, externalUrl: body.externalUrl };\r\n        }\r\n        if (!!body.tokens) {\r\n          data = { ...data, tokens: body.tokens};\r\n        }\r\n        await models.collectionModel.updateOne({ _id: body._id }, data);\r\n        res.status(200).json(\"Successfully updated!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n\r\n  const featureCollectionPath = path.join(__dirname,\"../\",\"../public/featureCollectionImage/\");\r\n  // for file upload\r\n  var Storage=multer.diskStorage({\r\n    destination:featureCollectionPath,\r\n    filename:(req,file,cb)=>{\r\n      cb(null,uuid.v4()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var uploadcoll=multer({\r\n    storage:Storage\r\n  }).single('pic');\r\n   \r\n  routes.post(\"/feature_collection\",auth,uploadcoll,(req,res)=>{\r\n    try {\r\n      if(req.file == undefined){\r\n        res.status(400).json({message:\"Image is Required\"})\r\n      }\r\n      else if(req.body.link == undefined){\r\n        res.status(400).json({message:\"Link is Required\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(err, data) {\r\n            if (err) throw err\r\n            let filterFeatureCollection= models.uploadfeaturemodel.findOneAndUpdate({collection_name:req.body.collection},{\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            filterFeatureCollection.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n    });\r\n    }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n});\r\n\r\n  routes.get(\"/feature_collection\", async (req, res) => {\r\n    try{\r\n      models.uploadfeaturemodel.find().lean().exec((err,data)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({data})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\n  routes.post(\"/verified_collection\",(req,res)=>{\r\n   try{\r\n      let VerifiedCollection= models.collectionModel.findOneAndUpdate({name:req.body.collection_name},{\r\n        isVerified: req.body.isverified\r\n      })\r\n      VerifiedCollection.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully Verified\"})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:profilefilePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar uploadImage=multer({\r\n  storage:Storage\r\n}).single('file');\r\n \r\nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\r\n try{\r\n    if(req.file == undefined){\r\n      res.status(\"400\").json({message:\"Image is Required\"})\r\n    }\r\n    else{\r\n        fs.readFile(req.file.path, (err, data) => {\r\n          if (err) throw err;\r\n          const params = {\r\n              Bucket: 'closedsea', // pass your bucket name\r\n              Key: req.body.fname, // file will be saved\r\n              ACL: \"public-read\",\r\n              ContentType: req.file.mimetype,\r\n              Body: data\r\n          };\r\n          s3.upload(params, function(s3Err, data) {\r\n              if (s3Err) throw s3Err\r\n              res.status(200).json(data);\r\n          });\r\n        });\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = { '$regex' : '^'+req.query.owner+'$', \"$options\": \"i\" };\r\n    const token = req.query.token;\r\n    if(owner && token){\r\n      const collections = await models.collectionModel.find({owner:owner,\"tokens.tokenId\": parseInt(token)}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections/v2\", async (req, res) => {\r\n  try {\r\n    const owner = { '$regex' : '^'+req.query.owner+'$', \"$options\": \"i\" };\r\n    if(owner && req.query.tokenId && req.query.tokenAddress){\r\n      const collections = await models.collectionModel.find({owner:owner,tokens:{$elemMatch:{tokenId: parseInt(req.query.tokenId),tokenAddress: {'$regex': '^'+req.query.tokenAddress+'$','$options': 'i'}}}}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n        $push: {'tokens': parseInt(body.token)}\r\n      })\r\n      tokenUpdate.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully token Added!\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(200).json({message:\"Document not found!\"})\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n      const obj = await models.viewAndLikeModel.findOne({ tokenAddr: { '$regex' : '^'+req.query.tokenAddr+'$', \"$options\": \"i\" }, tokenId:req.query.tokenId }).lean().exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" },\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            return res.status(200).json({message:\"Already viewed\",error:true});\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            return res.status(200).json({message:\"Already Liked\",error:true});\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" },\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\nroutes.get(\"/views_and_likes\",(req, res) => {\r\n    var viewAndLike=models.viewAndLikeModel.find();\r\n    viewAndLike.exec()\r\n    .then((data)=>{\r\n      res.send(data);\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.message}))\r\n})\r\n\r\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\r\n  let likedNft =[];\r\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\r\n    like.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          likedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/update-notification-bar\",async(req, res) => {\r\n  try{\r\n    let noti=await models.notificationmodel.findOne().lean().exec();\r\n    await models.notificationmodel.findOneAndUpdate({_id:noti._id},req.body).exec();\r\n    return res.status(200).json(\"Updated Successfully\")\r\n  } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/get-notification-bar\",async(req, res) => {\r\n  try{\r\n    let noti=await models.notificationmodel.findOne().lean().exec();\r\n    return res.status(200).json(noti)\r\n  } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\n\r\nroutes.post(\"/usersviews\",(req, res) => {\r\n  let viewedNft =[];\r\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\r\n    view.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          viewedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/users_follow\",(req, res) => {\r\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\r\n    $push: {'follower': req.body.following}\r\n  })\r\n  follower.exec((err)=>{\r\n    if(err) throw err;\r\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\r\n      $push: {'following': req.body.follower}\r\n    })\r\n    following.exec((err)=>{\r\n      if(err) throw err;\r\n      res.send(\"success\")\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/get-followers\",(req, res) => {\r\n  let followers=[];\r\n    var user=models.userModel.findOne({address:{'$regex' : '^'+req.body.userAddress+'$', \"$options\": \"i\"}});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.follower[0]!==undefined && data.follower[0]!==null){\r\n         data.follower.map(function(address){\r\n          let userdata=models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}});\r\n          userdata.exec((err,fdata)=>{\r\n            if (err) throw err\r\n            if(fdata!==undefined && fdata!==null){\r\n              followers.push(fdata)\r\n            }\r\n          })\r\n        })\r\n          setTimeout(()=>res.status(200).json({followers}),3000);\r\n          }\r\n        else{\r\n          res.status(400).json({msg:\"No followers\"})\r\n        }\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n    })\r\n})\r\n\r\nroutes.post(\"/get-following\",(req, res) => {\r\n  let followings=[];\r\n    var user=models.userModel.findOne({address:{'$regex' : '^'+req.body.userAddress+'$', \"$options\": \"i\"}});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.following[0]!==undefined && data.following[0]!==null){\r\n          data.following.map(function(address){\r\n            let userdata=models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}});\r\n            userdata.exec((err,fdata)=>{\r\n              if (err) throw err\r\n              if(fdata!==undefined && fdata!==null){\r\n                followings.push(fdata)\r\n              }\r\n            })\r\n          })\r\n        setTimeout(()=>res.status(200).json({followings}),3000);\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No followings\"})\r\n      }\r\n    }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n  })\r\n})\r\n\r\nroutes.post(\"/admin-register\",async(req, res) => {\r\n  try{\r\n    if(!req.body.walletAddress || !req.body.name || !req.body.email){\r\n      return res.status(500).json(\"Parameters are wrong\");\r\n    }\r\n    else{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        res.status(500).json(\"Already Admin\");\r\n      }\r\n      else{\r\n        let createAdmin=new models.adminRegisterModel({\r\n          walletAddress: req.body.walletAddress,\r\n          name:req.body.name,\r\n          email:req.body.email\r\n        })\r\n        createAdmin.save(function(){\r\n          res.status(200).json(\"Admin registerd Succcesfully\");\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-update\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        await models.adminRegisterModel.findOneAndUpdate({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}},req.body).exec();\r\n        res.status(200).json(\"Updated succesfully\");\r\n      }\r\n      else{\r\n        res.status(500).json(\"Wallet Address is necessary to update Admin\");\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-delete\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        await models.adminRegisterModel.findOneAndDelete({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n        res.status(200).json(\"Deleted succesfully\");\r\n      }\r\n      else{\r\n        res.status(500).json(\"Wallet Adddress is necessary to delete Admin\");\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/admin-all\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.find().lean().exec();\r\n      res.status(200).json(adminData);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",async(req, res) => {\r\n  if(req.body.address){\r\n    let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}}).exec();\r\n    if(adminData){\r\n      const jwtData = {\r\n        expiresIn:\"2 hours\" \r\n    };\r\n      const token=jwt.sign({walletAddress:req.body.address},secret,jwtData)\r\n      res.status(200).json(token)\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  }\r\n  else{\r\n    res.status(400).send(\"Wallet Not Found\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/single-nft\",(req, res) => {\r\n  if(req.body.tokenId == undefined || req.body.tokenAddr==undefined){\r\n    res.status(500).json(\"Payload are wrong\")\r\n  }\r\n  else{\r\n    var nftdata=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});;\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.post(\"/nft-wrt-owner\",(req, res) => {\r\n  if(req.body.owner == undefined){\r\n    res.status(500).json(\"Parameters are wrong\")\r\n  }\r\n  else{\r\n    var nftdata=models.nftControllerModel.find({owner: { '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" }});\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-chainId\",async (req, res) => {\r\n  try{\r\n    if( req.body.chainId.decimal == undefined || req.body.chainId.hexa==undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let decimal=parseInt(req.body.chainId.decimal);\r\n      let hexa=String(req.body.chainId.hexa);\r\n      let Nft = models.nftControllerModel.find({chainId:{decimal:decimal,hexa:hexa}});\r\n      Nft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        res.status(200).json(data)\r\n      })\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-tokenaddr\",async (req, res) => {\r\n  try{\r\n    if(req.body.tokenIds == undefined || req.body.tokenAddr == undefined || req.body.tokenIds.length < 1 || req.body.tokenIds.length == undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let data=[];\r\n      let tokenIds=req.body.tokenIds;\r\n      let i=0;\r\n      findNft(tokenIds[i]);\r\n      async function findNft(id){\r\n        let nft =await models.nftControllerModel.findOne({tokenId: id , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }}).lean().exec();\r\n        if(nft){\r\n          data.push(nft)\r\n        }\r\n        if(i!==tokenIds.length-1){\r\n          i++;\r\n          await findNft(tokenIds[i]);\r\n        }\r\n        else{\r\n          return res.status(200).json(data);\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-tokenaddr-and-id\",async (req, res) => {\r\n  try{\r\n    if(req.body.nftToken == undefined || req.body.nftToken.length < 1 || req.body.nftToken.length == undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let data=[];\r\n      let tokens=req.body.nftToken;\r\n      let i=0;\r\n      findNft(tokens[i]);\r\n      async function findNft(token){\r\n        if(!Object.keys(token).length<2 && token.id && token.address){\r\n          let nft =await models.nftControllerModel.findOne({tokenId: token.id , tokenAddr: { '$regex' : '^'+token.address+'$', \"$options\": \"i\" }}).lean().exec();\r\n          if(nft){\r\n            data.push(nft)\r\n          }\r\n        }\r\n        if(i!==tokens.length-1){\r\n          i++;\r\n          await findNft(tokens[i]);\r\n        }\r\n        else{\r\n          return res.status(200).json(data);\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/nft-collector\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.status(200).json(data)\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  try{\r\n    if(req.body.tokenId && req.body.tokenAddr){\r\n    let filterData=models.nftControllerModel.findOne({tokenId: String(req.body.tokenId) , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==null){\r\n          let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: String(req.body.tokenId),tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n            price: req.body.price,\r\n            owner:req.body.ownerOf,\r\n            selectedCat:req.body.selectedCat,\r\n            isOnSell:req.body.isOnSell\r\n          })\r\n          updateNft.exec((err)=>{\r\n            if(err) throw err;\r\n            res.status(200).json({message:\"Updated Success\"})\r\n          })\r\n        }\r\n        else{\r\n          let createNft=new models.nftControllerModel({\r\n            tokenAddr: req.body.tokenAddr,\r\n            tokenId: req.body.tokenId,\r\n            price: req.body.price,\r\n            owner:req.body.ownerOf,\r\n            metadata: req.body.metadata,\r\n            selectedCat:req.body.selectedCat,\r\n            tokenUri:req.body.tokenUri,\r\n            chainId:req.body.chainId,\r\n            relatedCollectionId:req.body.relatedCollectionId,\r\n            status:\"pending\"\r\n          })\r\n          createNft.save(function(){\r\n            res.status(200).json({message:\"Success\"})\r\n        });\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      res.status(500).json(\"Token Id Or TokenAddress is not Defined\");\r\n    }\r\n  } catch (error) {\r\n  res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.post(\"/external-nft\",(req, res) => {\r\n  try{\r\n    let query;\r\n    if(parseInt(req.body.chainId)==56 || String(req.body.chainId)==\"0x38\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:56,hexa:\"0x38\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0xB2D4C7AfFa1B01fa33C82A8aC63075BD366df4b0\"}},\r\n          {tokenAddr: {$ne:\"0x5b31d474dcadc1c2a1dfc7d4562b2268b0feea43\"}},\r\n          {tokenAddr: {$ne:\"0xA84ABA462A3dc12A5874c8D0D61d757256C905a5\"}},\r\n          {tokenAddr: {$ne:\"0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE\"}},\r\n          {tokenAddr: {$ne:\"0x69903cd9dBBEC1bcaB81E1ffe003260e9e487Ca4\"}},\r\n          {tokenAddr: {$ne:\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==97 || String(req.body.chainId)==\"0x61\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:97,hexa:\"0x61\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0x69536bdf4B18499181EB386B0E4019a28C4Fb096\"}},\r\n          {tokenAddr: {$ne:\"0xA4fb840986B10aC44aA893793cfe755c81c3740D\"}},\r\n          {tokenAddr: {$ne:\"0xBec98ca675EE0099E7eaF0d626a38abAE42Ef24D\"}},\r\n          {tokenAddr: {$ne:\"0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526\"}},\r\n          {tokenAddr: {$ne:\"0x51c19275686d84c1553f3edd2945dba6ec0c7de4\"}},\r\n          {tokenAddr: {$ne:\"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==4 || String(req.body.chainId)==\"0x4\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:4,hexa:\"0x4\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0xDB753bacDFb788c4d70CEc237F898db21017B11d\"}},\r\n          {tokenAddr: {$ne:\"0x848655Ccc2E571cA9470954BF08C4Eab3436830B\"}},\r\n          {tokenAddr: {$ne:\"0x8A36a5395CAa70da6545f030BFB659Fc8e820A59\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==1 || String(req.body.chainId)==\"0x1\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:1,hexa:\"0x1\"},\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==137 || String(req.body.chainId)==\"0x89\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:137,hexa:\"0x89\"},\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==80001 || String(req.body.chainId)==\"0x13881\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:80001,hexa:\"0x13881\"},\r\n      }\r\n    }\r\n    let externalNft= models.nftControllerModel.find(query)\r\n    externalNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(200).json(data)\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/insert-multiple-nft\",async (req, res) => {\r\n  try{\r\n    if(req.body.nfts.length<1){\r\n      res.status(400).json({message:\"NFT array not defined\"})\r\n    }\r\n    else{\r\n      let nfts=req.body.nfts;\r\n      let i=0;\r\n      storeNFT(0);\r\n      async function storeNFT(i){\r\n        let check = await models.nftControllerModel.findOne({tokenId: nfts[i].tokenId , tokenAddr: { '$regex' : '^'+nfts[i].tokenAddr+'$', \"$options\": \"i\" }}).exec();\r\n        if(check==null){\r\n           await new models.nftControllerModel({\r\n              tokenAddr: nfts[i].tokenAddr,\r\n              tokenId: nfts[i].tokenId,\r\n              price: nfts[i].price,\r\n              owner:nfts[i].ownerOf,\r\n              metadata: nfts[i].metadata,\r\n              selectedCat:nfts[i].selectedCat,\r\n              tokenUri:nfts[i].tokenUri,\r\n              chainId:nfts[i].chainId,\r\n              relatedCollectionId:nfts[i].relatedCollectionId,\r\n              status:\"pending\"\r\n          }).save();\r\n        }\r\n        if(i==nfts.length-1){\r\n          res.status(200).json({message:\"Successfully stored\"})\r\n        }\r\n        else{\r\n          i++;\r\n          await storeNFT(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/search-nft\",(req, res) => {\r\n  if (req.body.name !==undefined && req.body.name !== null && req.body.name !== false){\r\n    let limitedNft=models.nftControllerModel.find({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n    \r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(500).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n  }\r\n  else{\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n})\r\n\r\nroutes.post(\"/update-nft-status\",auth,(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==undefined && data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n        status: req.body.status,\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Status Updated Successfully\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Nft not found\"})\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/most-liked-nft\",async (req, res) => {\r\n  let limit=parseInt(req.body.size);\r\n  let page=parseInt(req.body.page);\r\n  \r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":-1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (page-1)*limit},\r\n          { $limit : limit }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({mostLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/least-liked-nft\",async (req, res) => {\r\n  let limit=parseInt(req.body.size);\r\n  let page=parseInt(req.body.page);\r\n\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (page-1)*limit},\r\n          { $limit : limit }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({leastLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/price-range-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);  \r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found in this Price range\",totalPage:totalPage,errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data,totalPage:totalPage});\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/oldest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:1})\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/newest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:-1});\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/count-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    res.status(202).json(count)\r\n  })\r\n})\r\n\r\nroutes.post(\"/nft-pagination\",(req, res) => {\r\n  let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);\r\n    limitedNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data[0]!==undefined && data[0]!==null){\r\n        res.status(202).json({nft:data,totalPage:totalPage})\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/feature-nft\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find({featured: true});\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    if(data[0]!==undefined && data[0]!==null){\r\n      res.status(200).json(data)\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"No any Nft is featured\"})\r\n    }\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/feature-nft\",auth,(req, res) => {\r\n  models.nftControllerModel.countDocuments({featured: true}, function(err, documents) {\r\n    if(documents==10 && req.body.isFeatured==true){\r\n      res.status(202).json({message:\"Feature nft limit exceed\"})\r\n    }\r\n    else if(documents==3 && req.body.isFeatured==false){\r\n      res.status(202).json({message:\"Minimum 3 should be featured\"})\r\n    }\r\n    else{\r\n      let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==undefined && data!==null){\r\n          if(data.status==\"active\"){\r\n            let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n              featured: req.body.isFeatured,\r\n            })\r\n            updateNft.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Nft Updated Successfully\"})\r\n            })\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Nft not activated\"})\r\n        }\r\n      }\r\n        else{\r\n          res.status(400).json({message:\"Nft not found\"})\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\nroutes.post(\"/count-nft-category-vise\",(req, res) => {\r\n  if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n  else if(req.body.category==\"All NFTs\"){\r\n    models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n  else{\r\n    models.nftControllerModel.countDocuments({selectedCat:req.body.category}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n})\r\n\r\nroutes.post(\"/nft-category-vise\",(req, res) => {\r\n  if(req.body.isMarketPlace){\r\n    if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n      res.status(200).json({message:\"Data is not defined\"})\r\n    }\r\n    else if(req.body.category==\"All NFTs\"){\r\n        let limitedNft=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\"}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(200).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n    }\r\n    else{\r\n        let limitedNft=models.nftControllerModel.find({selectedCat:req.body.category,isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({selectedCat:req.body.category,isOnSell:true,status:\"active\"}, function(err, count) {\r\n          if (err) throw err;\r\n          if(count == undefined || count == null || count == false || count == 0){\r\n            res.status(200).json({message:\"No NFT found for this Category\"})\r\n          }\r\n          else{\r\n            let totalPage=Math.ceil(count/req.body.size);\r\n            limitedNft.exec((err,data)=>{\r\n              if(err) throw err;\r\n              if(data[0]!==undefined && data[0]!==null){\r\n                res.status(202).json({nft:data,totalPage:totalPage})\r\n              }\r\n              else{\r\n                res.status(200).json({message:\"No NFT found for this Category\"})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  else{\r\n    let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      let totalPage=Math.ceil(count/req.body.size);\r\n      limitedNft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        if(data[0]!==undefined && data[0]!==null){\r\n          res.status(202).json({nft:data,totalPage:totalPage})\r\n        }\r\n        else{\r\n          res.status(200).json({message:\"No NFT found\"})\r\n        }\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n \r\n\r\nroutes.post(\"/add_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(\"400\").json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\r\n      if(documents==10){\r\n        res.status(202).json({msg:\"slider limit exceed\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            let uploadslider= new models.uploadSliderModel({\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            uploadslider.save((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n      });\r\n    }\r\n});\r\n}\r\n});\r\n\r\nroutes.post(\"/update_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(400).json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(400).json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n  console.log(req.file);\r\n  fs.readFile(req.file.path, (err, data) => {\r\n    if (err) throw err;\r\n    const params = {\r\n        Bucket: 'closedsea', // pass your bucket name\r\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n        ACL: \"public-read\",\r\n        ContentType: req.file.mimetype,\r\n        Body: data\r\n    };\r\n    s3.upload(params, function(s3Err, data) {\r\n        if (s3Err) throw s3Err\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\r\n          link: req.body.link,\r\n          imageUrl:data.Location\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n    });\r\n });\r\n}\r\n});\r\n\r\nroutes.delete(\"/delete_slider/:id\",auth,upload,(req,res)=>{\r\n  let url=req.query.q.split(\".com/\")[1] ;\r\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\r\n  s3.deleteObject({\r\n    Bucket: \"closedsea\",\r\n    Key: url\r\n  },function (err,data){\r\n    deleteSlider.exec(function(err){\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully deleted\"})\r\n  })\r\n  })\r\n});\r\n\r\nroutes.get(\"/getsliders\",(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    if(name){\r\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\r\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\r\n    \r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });}\r\n    else{\r\n      res.status(200).json({\r\n        message: \"success\",\r\n  \r\n        data: {\r\n          collections:\"\",\r\n          users:\"\"\r\n        }\r\n    })\r\n  }\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index.js"}