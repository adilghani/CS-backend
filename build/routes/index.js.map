{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","secret","use","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","auth","req","res","next","authHeader","header","token","decode","status","message","startsWith","substring","length","verify","console","log","walletAddress","decryptedData","models","adminRegisterModel","findOne","exec","get","route","post","body","check","userModel","address","undefined","userName","description","avatar","background","twitter","facebook","instagram","isVerified","save","error","put","userFromDB","findOneAndUpdate","runValidators","query","user","lean","VerifiedCollection","isverified","err","find","data","existingOne","collectionModel","name","tokenUpdate","$push","parseInt","tokens","send","create","owner","toLowerCase","nftAddress","externalUrl","_id","Error","updateOne","collection","delete","findOneAndDelete","toString","featureCollectionPath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadcoll","storage","single","link","readFile","params","Bucket","Key","ACL","ContentType","mimetype","Body","upload","filterFeatureCollection","uploadfeaturemodel","collection_name","imageUrl","Location","profilefilePath","uploadImage","fname","s3Err","collections","select","$and","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","includes","new","newUpdatedInfo","viewAndLike","then","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","nft","push","setTimeout","viewedNft","view","follower","following","followers","map","userdata","fdata","msg","followings","account","createAdmin","adminData","jwtData","expiresIn","sign","tokenIds","replace","filterData","updateNft","price","ownerOf","selectedCat","isOnSell","createNft","metadata","tokenUri","chainId","relatedCollectionId","String","decimal","hexa","$ne","externalNft","nfts","i","storeNFT","limitedNft","$regex","$options","skip","page","size","limit","countDocuments","count","totalPage","Math","ceil","aggregate","$match","$lookup","from","let","pipeline","$expr","$eq","as","$unwind","$addFields","$facet","$skip","$limit","Total","$group","$sum","mostLikedNft","leastLikedNft","$gt","startPrice","$lt","endPrice","errs","sort","$natural","featured","documents","isFeatured","category","isMarketPlace","filePath","uploadSliderModel","uploadslider","id","url","q","split","deleteSlider","deleteObject","users","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nconst bodyParser=require(\"body-parser\");\r\nvar uuid = require('uuid');\r\nconst fs = require('fs');\r\nconst AWS = require('aws-sdk')\r\nconst secret=\"1b4b2481e997ff0b8be28106f97040aa d4cb154b4a0b7e135354946c2b572110 b5d60d263e8e9596acd942a9402b23e0 e2705442w261f902b08fa9d220e3c906037 b8184ea414e848d2323838b30367703be82e c4e417215bb9dsddd4d231a8df5799d7f84 eb3e951fd15ae401513b56c684514ea3\";\r\nroutes.use(cookieParser())\r\n\r\n// Body Parsers\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(bodyParser.json());\r\n\r\nconst s3 = new AWS.S3({\r\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\r\n  secretAccessKey: \"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\"\r\n});\r\n\r\nasync function auth(req, res, next) {\r\n  var authHeader = req.header('authorization');\r\n  let token,decode;\r\n  if (!authHeader){\r\n    res.status(500).json({message:\"Token is not defined\"})\r\n  } \r\n  else if (authHeader.startsWith(\"Bearer \")){\r\n    token = authHeader.substring(7, authHeader.length);\r\n    decode =jwt.verify(token, secret);\r\n  } \r\n  else {\r\n    decode =jwt.verify(token, secret);;\r\n  }\r\n  console.log(decode)\r\n  if(decode?.walletAddress){\r\n    var decryptedData = await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+decode.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n    if(decryptedData){\r\n      next()\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"You are not authorized person\"})\r\n    }\r\n  }\r\n  else{\r\n    res.status(400).json({message:\"Your token is not valid/expired\"})\r\n  }\r\n};\r\n\r\nroutes.get(\"/\", (req, res) => {\r\n  res.status(200).json({ message: \"Connected!\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      let check = await models.userModel.findOne({address: {'$regex' : '^'+body.address+'$', \"$options\": \"i\"}}).exec();\r\n      console.log(check)\r\n      if(check !== null && check !== undefined){\r\n        res.status(200).json({ message: \"This wallet address is already exist\" });\r\n      }\r\n      else{\r\n        await new models.userModel({\r\n          address: body.address,\r\n          userName: body.userName,\r\n          description: body.description,\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          twitter: body.twitter,\r\n          facebook:body.facebook,\r\n          instagram: body.instagram,\r\n          isVerified:body.isVerified\r\n        }).save();\r\n        res.status(200).json(\"Successfully registered\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\",error:error.message });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"},\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.findOneAndUpdate({address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"}},{ ...body},\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try{\r\n      const address = req.query.address;\r\n      const user = await models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}}).lean().exec();\r\n      res.status(200).json({ ...user });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\n  routes.post(\"/verified_user\",(req,res)=>{\r\n    try{  \r\n    let VerifiedCollection= models.userModel.findOneAndUpdate({address:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}},{\r\n        isVerified: req.body.isverified\r\n      })\r\n      VerifiedCollection.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully Verified\"})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nroutes.get(\"/get-all-users\",auth, (req, res) => {\r\n  try{\r\n    let user = models.userModel.find();\r\n    user.exec((err,data)=>{\r\n      res.status(200).json({data});\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      \r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens': parseInt(body.tokens)}\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          tokens: parseInt(body.tokens) || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({_id: body._id,}).exec();\r\n      if (!existingOne) {\r\n        throw new Error(\"No exist id\");\r\n      }\r\n      let data = {\r\n        name: {'$regex' : '^'+body.name+'$', \"$options\": \"i\"},\r\n      };\r\n      if (!!body.avatar) {\r\n        data = { ...data, avatar: body.avatar };\r\n      }\r\n      if (!!body.background) {\r\n        data = { ...data, background: body.background };\r\n      }\r\n      if (!!body.description) {\r\n        data = { ...data, description: body.description };\r\n      }\r\n      if (!!body.externalUrl) {\r\n        data = { ...data, externalUrl: body.externalUrl };\r\n      }\r\n      if (!!body.tokens) {\r\n        data = { ...data, tokens: body.tokens };\r\n      }\r\n      await models.collectionModel.updateOne({ _id: body._id }, data);\r\n      res.status(200).json(\"Successfully updated!\");\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n  const featureCollectionPath = path.join(__dirname,\"../\",\"../public/featureCollectionImage/\");\r\n  // for file upload\r\n  var Storage=multer.diskStorage({\r\n    destination:featureCollectionPath,\r\n    filename:(req,file,cb)=>{\r\n      cb(null,uuid.v4()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var uploadcoll=multer({\r\n    storage:Storage\r\n  }).single('pic');\r\n   \r\n  routes.post(\"/feature_collection\",auth,uploadcoll,(req,res)=>{\r\n    try {\r\n      if(req.file == undefined){\r\n        res.status(400).json({message:\"Image is Required\"})\r\n      }\r\n      else if(req.body.link == undefined){\r\n        res.status(400).json({message:\"Link is Required\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(err, data) {\r\n            if (err) throw err\r\n            let filterFeatureCollection= models.uploadfeaturemodel.findOneAndUpdate({collection_name:req.body.collection},{\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            filterFeatureCollection.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n    });\r\n    }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n});\r\n\r\n  routes.get(\"/feature_collection\",auth, async (req, res) => {\r\n    try{\r\n      models.uploadfeaturemodel.find((err,data)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({data})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\n  routes.post(\"/verified_collection\",(req,res)=>{\r\n   try{\r\n      let VerifiedCollection= models.collectionModel.findOneAndUpdate({name:req.body.collection_name},{\r\n        isVerified: req.body.isverified\r\n      })\r\n      VerifiedCollection.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully Verified\"})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:profilefilePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar uploadImage=multer({\r\n  storage:Storage\r\n}).single('file');\r\n \r\nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\r\n try{\r\n    if(req.file == undefined){\r\n      res.status(\"400\").json({message:\"Image is Required\"})\r\n    }\r\n    else{\r\n        fs.readFile(req.file.path, (err, data) => {\r\n          if (err) throw err;\r\n          const params = {\r\n              Bucket: 'closedsea', // pass your bucket name\r\n              Key: req.body.fname, // file will be saved\r\n              ACL: \"public-read\",\r\n              ContentType: req.file.mimetype,\r\n              Body: data\r\n          };\r\n          s3.upload(params, function(s3Err, data) {\r\n              if (s3Err) throw s3Err\r\n              res.status(200).json(data);\r\n          });\r\n        });\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = req.query.owner?.toLowerCase();\r\n    const token = req.query.token;\r\n    if(owner && token){\r\n      const collections = await models.collectionModel.find({$and:[ {owner:owner},{tokens:parseInt(token)} ]}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n        $push: {'tokens': parseInt(body.token)}\r\n      })\r\n      tokenUpdate.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully token Added!\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(200).json({message:\"Document not found!\"})\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n      const obj = await models.viewAndLikeModel.findOne({ tokenAddr: { '$regex' : '^'+req.query.tokenAddr+'$', \"$options\": \"i\" }, tokenId:req.query.tokenId }).lean().exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" },\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            throw new Error(\"Already viewed\");\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            throw new Error(\"Already Liked\");\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" }, tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: { '$regex' : '^'+body.tokenAddr+'$', \"$options\": \"i\" },\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\nroutes.get(\"/views_and_likes\",(req, res) => {\r\n    var viewAndLike=models.viewAndLikeModel.find();\r\n    viewAndLike.exec()\r\n    .then((data)=>{\r\n      res.send(data);\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.message}))\r\n})\r\n\r\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\r\n  let likedNft =[];\r\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\r\n    like.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          likedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\r\n    })\r\n})\r\n\r\n\r\nroutes.post(\"/usersviews\",(req, res) => {\r\n  let viewedNft =[];\r\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\r\n    view.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          viewedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/users_follow\",(req, res) => {\r\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\r\n    $push: {'follower': req.body.following}\r\n  })\r\n  follower.exec((err)=>{\r\n    if(err) throw err;\r\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\r\n      $push: {'following': req.body.follower}\r\n    })\r\n    following.exec((err)=>{\r\n      if(err) throw err;\r\n      res.send(\"success\")\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/get-followers\",(req, res) => {\r\n  let followers=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.follower[0]!==undefined && data.follower[0]!==null){\r\n         data.follower.map(function(address){\r\n          let userdata=models.userModel.findOne({address:address});\r\n          userdata.exec((err,fdata)=>{\r\n            if (err) throw err\r\n            if(fdata!==undefined && fdata!==null){\r\n              followers.push(fdata)\r\n            }\r\n          })\r\n        })\r\n          setTimeout(()=>res.status(200).json({followers}),3000);\r\n          }\r\n        else{\r\n          res.status(400).json({msg:\"No followers\"})\r\n        }\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n    })\r\n})\r\n\r\nroutes.post(\"/get-following\",(req, res) => {\r\n  let followings=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.following[0]!==undefined && data.following[0]!==null){\r\n          data.following.map(function(address){\r\n            let userdata=models.userModel.findOne({address:address});\r\n            userdata.exec((err,fdata)=>{\r\n              if (err) throw err\r\n              if(fdata!==undefined && fdata!==null){\r\n                followings.push(fdata)\r\n              }\r\n            })\r\n          })\r\n        setTimeout(()=>res.status(200).json({followings}),3000);\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No followings\"})\r\n      }\r\n    }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n  })\r\n})\r\n\r\nroutes.post(\"/admin-register\",(req, res) => {\r\n  if(req.body.account){\r\n    let createAdmin=new models.adminRegisterModel({\r\n      walletAddress: req.body.account,\r\n    })\r\n    createAdmin.save(function(){\r\n      res.send(\"Admin Stored Succcesfully\");\r\n    });\r\n  }\r\n  else{\r\n    res.status.send(\"address are empty\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",async(req, res) => {\r\n  if(req.body.address){\r\n    let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}}).exec();\r\n    if(adminData){\r\n      const jwtData = {\r\n        expiresIn:\"2 hours\" \r\n    };\r\n      const token=jwt.sign({walletAddress:req.body.address},secret,jwtData)\r\n      res.status(200).json(token)\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  }\r\n  else{\r\n    res.status(400).send(\"Wallet Not Found\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/single-nft\",(req, res) => {\r\n  if(req.body.tokenId == undefined || req.body.tokenAddr==undefined){\r\n    res.status(500).json(\"Payload are wrong\")\r\n  }\r\n  else{\r\n    var nftdata=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});;\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-tokenaddr\",(req, res) => {\r\n  if(req.body.tokenIds == undefined || req.body.tokenAddr==undefined){\r\n    res.status(500).json(\"Payload are wrong\")\r\n  }\r\n  else{\r\n    let tokenId = req.body.tokenIds.toString();\r\n    let tokenIds=tokenId.replace(/,/g, \"|\");\r\n    var nftdata=models.nftControllerModel.find({tokenAddr:req.body.tokenAddr,tokenId:{\"$regex\":tokenIds}});\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.get(\"/nft-collector\",auth,(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.status(200).json(data)\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId,tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        selectedCat:req.body.selectedCat,\r\n        isOnSell:req.body.isOnSell\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Updated Success\"})\r\n      })\r\n    }\r\n    else{\r\n      let createNft=new models.nftControllerModel({\r\n        tokenAddr: req.body.tokenAddr,\r\n        tokenId: req.body.tokenId,\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        metadata: req.body.metadata,\r\n        selectedCat:req.body.selectedCat,\r\n        tokenUri:req.body.tokenUri,\r\n        chainId:req.body.chainId,\r\n        relatedCollectionId:req.body.relatedCollectionId,\r\n        status:\"pending\"\r\n      })\r\n      createNft.save(function(){\r\n        res.status(200).json({message:\"Success\"})\r\n    });\r\n    }\r\n})\r\n})\r\n\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId,tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        selectedCat:req.body.selectedCat,\r\n        isOnSell:req.body.isOnSell\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Updated Success\"})\r\n      })\r\n    }\r\n    else{\r\n      let createNft=new models.nftControllerModel({\r\n        tokenAddr: req.body.tokenAddr,\r\n        tokenId: req.body.tokenId,\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        metadata: req.body.metadata,\r\n        selectedCat:req.body.selectedCat,\r\n        tokenUri:req.body.tokenUri,\r\n        chainId:req.body.chainId,\r\n        relatedCollectionId:req.body.relatedCollectionId,\r\n        status:\"pending\"\r\n      })\r\n      createNft.save(function(){\r\n        res.status(200).json({message:\"Success\"})\r\n    });\r\n    }\r\n})\r\n})\r\n\r\nroutes.post(\"/external-nft\",(req, res) => {\r\n  try{\r\n    let query;\r\n    if(parseInt(req.body.chainId)==56 || String(req.body.chainId)==\"0x38\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:56,hexa:\"0x38\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0xB2D4C7AfFa1B01fa33C82A8aC63075BD366df4b0\"}},\r\n          {tokenAddr: {$ne:\"0x5b31d474dcadc1c2a1dfc7d4562b2268b0feea43\"}},\r\n          {tokenAddr: {$ne:\"0xA84ABA462A3dc12A5874c8D0D61d757256C905a5\"}},\r\n          {tokenAddr: {$ne:\"0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE\"}},\r\n          {tokenAddr: {$ne:\"0x69903cd9dBBEC1bcaB81E1ffe003260e9e487Ca4\"}},\r\n          {tokenAddr: {$ne:\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==97 || String(req.body.chainId)==\"0x61\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:97,hexa:\"0x61\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0x69536bdf4B18499181EB386B0E4019a28C4Fb096\"}},\r\n          {tokenAddr: {$ne:\"0xA4fb840986B10aC44aA893793cfe755c81c3740D\"}},\r\n          {tokenAddr: {$ne:\"0xBec98ca675EE0099E7eaF0d626a38abAE42Ef24D\"}},\r\n          {tokenAddr: {$ne:\"0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526\"}},\r\n          {tokenAddr: {$ne:\"0x51c19275686d84c1553f3edd2945dba6ec0c7de4\"}},\r\n          {tokenAddr: {$ne:\"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==4 || String(req.body.chainId)==\"0x4\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:4,hexa:\"0x4\"},\r\n        $and:[\r\n          {tokenAddr: {$ne:\"0xDB753bacDFb788c4d70CEc237F898db21017B11d\"}},\r\n          {tokenAddr: {$ne:\"0x848655Ccc2E571cA9470954BF08C4Eab3436830B\"}},\r\n          {tokenAddr: {$ne:\"0x8A36a5395CAa70da6545f030BFB659Fc8e820A59\"}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==1 || String(req.body.chainId)==\"0x1\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:1,hexa:\"0x1\"},\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==137 || String(req.body.chainId)==\"0x89\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:137,hexa:\"0x89\"},\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==80001 || String(req.body.chainId)==\"0x13881\"){\r\n      query={\r\n        owner:req.body.owner,\r\n        chainId:{decimal:80001,hexa:\"0x13881\"},\r\n      }\r\n    }\r\n    let externalNft= models.nftControllerModel.find(query)\r\n    externalNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(200).json(data)\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/insert-multiple-nft\",async (req, res) => {\r\n  try{\r\n    if(req.body.nfts.length<1){\r\n      res.status(400).json({message:\"NFT array not defined\"})\r\n    }\r\n    else{\r\n      let nfts=req.body.nfts;\r\n      let i=0;\r\n      storeNFT(0);\r\n      async function storeNFT(i){\r\n        let check = await models.nftControllerModel.findOne({tokenId: nfts[i].tokenId , tokenAddr: { '$regex' : '^'+nfts[i].tokenAddr+'$', \"$options\": \"i\" }}).exec();\r\n        if(check==null){\r\n           await new models.nftControllerModel({\r\n              tokenAddr: nfts[i].tokenAddr,\r\n              tokenId: nfts[i].tokenId,\r\n              price: nfts[i].price,\r\n              owner:nfts[i].ownerOf,\r\n              metadata: nfts[i].metadata,\r\n              selectedCat:nfts[i].selectedCat,\r\n              tokenUri:nfts[i].tokenUri,\r\n              chainId:nfts[i].chainId,\r\n              relatedCollectionId:nfts[i].relatedCollectionId,\r\n              status:\"pending\"\r\n          }).save();\r\n        }\r\n        if(i==nfts.length-1){\r\n          res.status(200).json({message:\"Successfully stored\"})\r\n        }\r\n        else{\r\n          i++;\r\n          await storeNFT(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/search-nft\",(req, res) => {\r\n  if (req.body.name !==undefined && req.body.name !== null && req.body.name !== false){\r\n    let limitedNft=models.nftControllerModel.find({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n    \r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(500).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n  }\r\n  else{\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n})\r\n\r\nroutes.post(\"/update-nft-status\",auth,(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==undefined && data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n        status: req.body.status,\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Status Updated Successfully\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Nft not found\"})\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/most-liked-nft\",async (req, res) => {\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":-1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (req.body.page-1)*req.body.size},\r\n          { $limit : req.body.size }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({mostLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/least-liked-nft\",async (req, res) => {\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (req.body.page-1)*req.body.size},\r\n          { $limit : req.body.size }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({leastLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/price-range-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);  \r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found in this Price range\",totalPage:totalPage,errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data,totalPage:totalPage});\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/oldest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:1})\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/newest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:-1});\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/count-nft\",auth,(req, res) => {\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    res.status(202).json(count)\r\n  })\r\n})\r\n\r\nroutes.post(\"/nft-pagination\",(req, res) => {\r\n  let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);\r\n    limitedNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data[0]!==undefined && data[0]!==null){\r\n        res.status(202).json({nft:data,totalPage:totalPage})\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/feature-nft\",auth,(req, res) => {\r\n  var nftdata=models.nftControllerModel.find({featured: true});\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    if(data[0]!==undefined && data[0]!==null){\r\n      res.status(200).json(data)\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"No any Nft is featured\"})\r\n    }\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/feature-nft\",auth,(req, res) => {\r\n  models.nftControllerModel.countDocuments({featured: true}, function(err, documents) {\r\n    if(documents==10 && req.body.isFeatured==true){\r\n      res.status(202).json({message:\"Feature nft limit exceed\"})\r\n    }\r\n    else if(documents==3 && req.body.isFeatured==false){\r\n      res.status(202).json({message:\"Minimum 3 should be featured\"})\r\n    }\r\n    else{\r\n      let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==undefined && data!==null){\r\n          if(data.status==\"active\"){\r\n            let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n              featured: req.body.isFeatured,\r\n            })\r\n            updateNft.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Nft Updated Successfully\"})\r\n            })\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Nft not activated\"})\r\n        }\r\n      }\r\n        else{\r\n          res.status(400).json({message:\"Nft not found\"})\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\nroutes.post(\"/count-nft-category-vise\",(req, res) => {\r\n  if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n  else if(req.body.category==\"All NFTs\"){\r\n    models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n  else{\r\n    models.nftControllerModel.countDocuments({selectedCat:req.body.category}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n})\r\n\r\nroutes.post(\"/nft-category-vise\",(req, res) => {\r\n  if(req.body.isMarketPlace){\r\n    if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n      res.status(200).json({message:\"Data is not defined\"})\r\n    }\r\n    else if(req.body.category==\"All NFTs\"){\r\n        let limitedNft=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\"}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(200).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n    }\r\n    else{\r\n        let limitedNft=models.nftControllerModel.find({selectedCat:req.body.category,isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({selectedCat:req.body.category,isOnSell:true,status:\"active\"}, function(err, count) {\r\n          if (err) throw err;\r\n          if(count == undefined || count == null || count == false || count == 0){\r\n            res.status(200).json({message:\"No NFT found for this Category\"})\r\n          }\r\n          else{\r\n            let totalPage=Math.ceil(count/req.body.size);\r\n            limitedNft.exec((err,data)=>{\r\n              if(err) throw err;\r\n              if(data[0]!==undefined && data[0]!==null){\r\n                res.status(202).json({nft:data,totalPage:totalPage})\r\n              }\r\n              else{\r\n                res.status(200).json({message:\"No NFT found for this Category\"})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  else{\r\n    let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      let totalPage=Math.ceil(count/req.body.size);\r\n      limitedNft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        if(data[0]!==undefined && data[0]!==null){\r\n          res.status(202).json({nft:data,totalPage:totalPage})\r\n        }\r\n        else{\r\n          res.status(200).json({message:\"No NFT found\"})\r\n        }\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n \r\n\r\nroutes.post(\"/add_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(\"400\").json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\r\n      if(documents==10){\r\n        res.status(202).json({msg:\"slider limit exceed\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            let uploadslider= new models.uploadSliderModel({\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            uploadslider.save((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n      });\r\n    }\r\n});\r\n}\r\n});\r\n\r\nroutes.post(\"/update_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(400).json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(400).json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n  console.log(req.file);\r\n  fs.readFile(req.file.path, (err, data) => {\r\n    if (err) throw err;\r\n    const params = {\r\n        Bucket: 'closedsea', // pass your bucket name\r\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n        ACL: \"public-read\",\r\n        ContentType: req.file.mimetype,\r\n        Body: data\r\n    };\r\n    s3.upload(params, function(s3Err, data) {\r\n        if (s3Err) throw s3Err\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\r\n          link: req.body.link,\r\n          imageUrl:data.Location\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n    });\r\n });\r\n}\r\n});\r\n\r\nroutes.delete(\"/delete_slider/:id\",auth,upload,(req,res)=>{\r\n  let url=req.query.q.split(\".com/\")[1] ;\r\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\r\n  s3.deleteObject({\r\n    Bucket: \"closedsea\",\r\n    Key: url\r\n  },function (err,data){\r\n    deleteSlider.exec(function(err){\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully deleted\"})\r\n  })\r\n  })\r\n});\r\n\r\nroutes.get(\"/getsliders\",auth,(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    if(name){\r\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\r\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\r\n    \r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });}\r\n    else{\r\n      res.status(200).json({\r\n        message: \"success\",\r\n  \r\n        data: {\r\n          collections:\"\",\r\n          users:\"\"\r\n        }\r\n    })\r\n  }\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index.js"}