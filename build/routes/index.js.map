{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","use","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","get","req","res","status","message","route","post","body","check","models","userModel","findOne","address","toLowerCase","exec","undefined","create","error","console","log","put","userFromDB","updateOne","runValidators","query","user","lean","VerifiedCollection","findOneAndUpdate","isVerified","isverified","err","find","data","existingOne","collectionModel","name","tokenUpdate","$push","parseInt","tokens","send","owner","nftAddress","avatar","background","description","externalUrl","toString","_id","Error","collection","delete","findOneAndDelete","featureCollectionPath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadcoll","storage","single","link","readFile","params","Bucket","Key","ACL","ContentType","mimetype","Body","upload","filterFeatureCollection","uploadfeaturemodel","collection_name","imageUrl","Location","profilefilePath","uploadImage","fname","s3Err","collections","select","token","$and","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","includes","new","newUpdatedInfo","viewAndLike","then","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","nft","push","setTimeout","viewedNft","view","follower","following","followers","map","userdata","fdata","msg","followings","account","createAdmin","adminRegisterModel","walletAddress","save","adminData","sign","cookie","expires","Date","now","filterData","updateNft","price","ownerOf","isOnSell","createNft","metadata","selectedCat","tokenUri","chainId","relatedCollectionId","limitedNft","$regex","$options","skip","page","size","limit","countDocuments","count","totalPage","Math","ceil","aggregate","$match","$lookup","from","localField","foreignField","as","$unwind","$addFields","$facet","$skip","$limit","Total","$group","$sum","leastLikedNft","$gt","startPrice","$lt","endPrice","errs","sort","$natural","featured","documents","isFeatured","category","isMarketPlace","filePath","uploadSliderModel","uploadslider","id","url","q","split","deleteSlider","deleteObject","users","userName","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nconst bodyParser=require(\"body-parser\");\r\nvar uuid = require('uuid');\r\nconst fs = require('fs');\r\nconst AWS = require('aws-sdk')\r\n\r\nroutes.use(cookieParser())\r\n\r\n// Body Parsers\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(bodyParser.json());\r\n\r\nconst s3 = new AWS.S3({\r\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\r\n  secretAccessKey: \"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\"\r\n});\r\n\r\nroutes.get(\"/\", (req, res) => {\r\n  res.status(200).json({ message: \"Connected!\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      let check = await models.userModel.findOne({address: body.address.toLowerCase()}).exec();\r\n      if(check == null || check == undefined){\r\n        res.status(200).json({ message: \"This wallet address is already exist\" });\r\n      }\r\n      else{\r\n        await models.userModel.create({\r\n          ...body,\r\n          address: body.address.toLowerCase(),\r\n        });\r\n        res.status(200).json(\"Successfully registered\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address: body.address.toLowerCase(),\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.updateOne(\r\n          { address: body.address.toLowerCase() },\r\n          { ...body, address: body.address.toLowerCase() },\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    const address = req.query.address;\r\n    const user = await models.userModel\r\n      .findOne({ address: address.toLowerCase() })\r\n      .lean()\r\n      .exec();\r\n    res.status(200).json({ ...user });\r\n  });\r\n\r\n  routes.post(\"/verified_user\",(req,res)=>{\r\n    let VerifiedCollection= models.userModel.findOneAndUpdate({address:req.body.address},{\r\n      isVerified: req.body.isverified\r\n    })\r\n    VerifiedCollection.exec((err)=>{\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully Verified\"})\r\n    })\r\n  })\r\n\r\nroutes.get(\"/get-all-users\", (req, res) => {\r\n    let user = models.userModel.find();\r\n    user.exec((err,data)=>{\r\n      res.status(200).json({data});\r\n    })\r\n});\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      \r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens': parseInt(body.tokens)}\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          tokens: parseInt(body.tokens) || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[collection post] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        _id: body._id,\r\n      });\r\n      if (!existingOne) {\r\n        throw new Error(\"No exist id\");\r\n      }\r\n      let data = {\r\n        name: body.name?.toLowerCase(),\r\n      };\r\n      if (!!body.avatar) {\r\n        data = { ...data, avatar: body.avatar };\r\n      }\r\n      if (!!body.background) {\r\n        data = { ...data, background: body.background };\r\n      }\r\n      if (!!body.description) {\r\n        data = { ...data, description: body.description };\r\n      }\r\n      if (!!body.externalUrl) {\r\n        data = { ...data, externalUrl: body.externalUrl };\r\n      }\r\n      if (!!body.tokens) {\r\n        data = { ...data, tokens: body.tokens };\r\n      }\r\n      await models.collectionModel.updateOne({ _id: body._id }, data);\r\n      res.status(200).json(\"Successfully updated!\");\r\n    } catch (error) {\r\n      console.log(\"[collection put] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      console.log(\"[collection get] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n  const featureCollectionPath = path.join(__dirname,\"../\",\"../public/featureCollectionImage/\");\r\n\r\n  // for file upload\r\n  var Storage=multer.diskStorage({\r\n    destination:featureCollectionPath,\r\n    filename:(req,file,cb)=>{\r\n      cb(null,uuid.v4()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var uploadcoll=multer({\r\n    storage:Storage\r\n  }).single('pic');\r\n   \r\n  routes.post(\"/feature_collection\",uploadcoll,(req,res)=>{\r\n    if(req.file == undefined){\r\n      res.status(400).json({message:\"Image is Required\"})\r\n    }\r\n    else if(req.body.link == undefined){\r\n      res.status(400).json({message:\"Link is Required\"})\r\n    }\r\n    else{\r\n    fs.readFile(req.file.path, (err, data) => {\r\n      if (err) throw err;\r\n      const params = {\r\n          Bucket: 'closedsea', // pass your bucket name\r\n          Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n          ACL: \"public-read\",\r\n          ContentType: req.file.mimetype,\r\n          Body: data\r\n      };\r\n      s3.upload(params, function(err, data) {\r\n          if (err) throw err\r\n          let filterFeatureCollection= models.uploadfeaturemodel.findOneAndUpdate({collection_name:req.body.collection},{\r\n            link: req.body.link,\r\n            imageUrl:data.Location\r\n          })\r\n          filterFeatureCollection.exec((err)=>{\r\n            if(err) throw err;\r\n            res.status(200).json({message:\"Success\"})\r\n          })\r\n      });\r\n   });\r\n  }\r\n  });\r\n\r\n  routes.get(\"/feature_collection\", async (req, res) => {\r\n    models.uploadfeaturemodel.find((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(200).json({data})\r\n    })\r\n  })\r\n\r\n  routes.post(\"/verified_collection\",(req,res)=>{\r\n    let VerifiedCollection= models.collectionModel.findOneAndUpdate({name:req.body.collection_name},{\r\n      isVerified: req.body.isverified\r\n    })\r\n    VerifiedCollection.exec((err)=>{\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully Verified\"})\r\n    })\r\n  })\r\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\r\n\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:profilefilePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar uploadImage=multer({\r\n  storage:Storage\r\n}).single('file');\r\n \r\nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.body.fname, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            res.status(200).json(data);\r\n        });\r\n      });\r\n    }\r\n})\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = req.query.owner?.toLowerCase();\r\n    const token = req.query.token;\r\n    if(owner && token){\r\n      const collections = await models.collectionModel.find({$and:[ {owner:owner},{tokens:parseInt(token)} ]}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n        $push: {'tokens': parseInt(body.token)}\r\n      })\r\n      tokenUpdate.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully token Added!\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(200).json({message:\"Document not found!\"})\r\n    }\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n\r\n      const obj = await models.viewAndLikeModel\r\n        .findOne({ tokenAddr, tokenId })\r\n        .lean()\r\n        .exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] get error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: body.tokenAddr,\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            throw new Error(\"Already viewed\");\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            throw new Error(\"Already Liked\");\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: body.tokenAddr?.toLowerCase(), tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: body.tokenAddr?.toLowerCase(),\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] post error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\nroutes.get(\"/views_and_likes\",(req, res) => {\r\n    var viewAndLike=models.viewAndLikeModel.find();\r\n    viewAndLike.exec()\r\n    .then((data)=>{\r\n      res.send(data);\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\r\n  let likedNft =[];\r\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\r\n    like.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          likedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\r\n    })\r\n})\r\n\r\n\r\nroutes.post(\"/usersviews\",(req, res) => {\r\n  let viewedNft =[];\r\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\r\n    view.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          viewedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/users_follow\",(req, res) => {\r\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\r\n    $push: {'follower': req.body.following}\r\n  })\r\n  follower.exec((err)=>{\r\n    if(err) throw err;\r\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\r\n      $push: {'following': req.body.follower}\r\n    })\r\n    following.exec((err)=>{\r\n      if(err) throw err;\r\n      res.send(\"success\")\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/get-followers\",(req, res) => {\r\n  let followers=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.follower[0]!==undefined && data.follower[0]!==null){\r\n         data.follower.map(function(address){\r\n          let userdata=models.userModel.findOne({address:address});\r\n          userdata.exec((err,fdata)=>{\r\n            if (err) throw err\r\n            if(fdata!==undefined && fdata!==null){\r\n              followers.push(fdata)\r\n            }\r\n          })\r\n        })\r\n          setTimeout(()=>res.status(200).json({followers}),3000);\r\n          }\r\n        else{\r\n          res.status(400).json({msg:\"No followers\"})\r\n        }\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n    })\r\n})\r\n\r\nroutes.post(\"/get-following\",(req, res) => {\r\n  let followings=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.following[0]!==undefined && data.following[0]!==null){\r\n          data.following.map(function(address){\r\n            let userdata=models.userModel.findOne({address:address});\r\n            userdata.exec((err,fdata)=>{\r\n              if (err) throw err\r\n              if(fdata!==undefined && fdata!==null){\r\n                followings.push(fdata)\r\n              }\r\n            })\r\n          })\r\n        setTimeout(()=>res.status(200).json({followings}),3000);\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No followings\"})\r\n      }\r\n    }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n  })\r\n})\r\n\r\nroutes.post(\"/admin-register\",(req, res) => {\r\n  if(req.body.account){\r\n    let createAdmin=new models.adminRegisterModel({\r\n      walletAddress: req.body.account,\r\n    })\r\n    createAdmin.save(function(){\r\n      res.send(\"Admin Stored Succcesfully\");\r\n    });\r\n  }\r\n  else{\r\n    res.status.send(\"address are empty\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",(req, res) => {\r\n  let adminData=models.adminRegisterModel.findOne({walletAddress:req.body.account});\r\n  adminData.exec()\r\n  .then((data)=>{\r\n    if(data){\r\n      const token=jwt.sign({walletAddress:req.body.account},\"walletaddress12345678123456781234\")\r\n      res.cookie('closedSeaAdmin',token,{expires:new Date(Date.now()+6000000)})\r\n      res.status(200).send(\"Sucessfull Login\")\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.get(\"/nft-collector\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.status(200).json(data)\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        isOnSell:req.body.isOnSell\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Updated Success\"})\r\n      })\r\n    }\r\n    else{\r\n      let createNft=new models.nftControllerModel({\r\n        tokenAddr: req.body.tokenAddr,\r\n        tokenId: req.body.tokenId,\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        metadata: req.body.metadata,\r\n        selectedCat:req.body.selectedCat,\r\n        tokenUri:req.body.tokenUri,\r\n        chainId:req.body.chainId,\r\n        relatedCollectionId:req.body.relatedCollectionId,\r\n        status:\"pending\"\r\n      })\r\n      createNft.save(function(){\r\n        res.status(200).json({message:\"Success\"})\r\n    });\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/search-nft\",(req, res) => {\r\n  if (req.body.name !==undefined && req.body.name !== null && req.body.name !== false){\r\n    let limitedNft=models.nftControllerModel.find({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'}}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n    \r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(500).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n  }\r\n  else{\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n})\r\n\r\nroutes.post(\"/update-nft-status\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==undefined && data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n        status: req.body.status,\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Status Updated Successfully\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Nft not found\"})\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/most-liked-nft\",async (req, res) => {\r\n  // let leastLikeNft=[]\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      localField: \"tokenId\",//field from the input documents\r\n      foreignField: \"tokenId\",//field from the documents of the \"from\" collection\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":-1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (req.body.page-1)*req.body.size},\r\n          { $limit : req.body.size }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({leastLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/least-liked-nft\",async (req, res) => {\r\n  // let leastLikeNft=[]\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\"}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      localField: \"tokenId\",//field from the input documents\r\n      foreignField: \"tokenId\",//field from the documents of the \"from\" collection\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (req.body.page-1)*req.body.size},\r\n          { $limit : req.body.size }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=filterData[0].Total[0].count;\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({leastLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/price-range-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);  \r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found in this Price range\",totalPage:totalPage,errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data,totalPage:totalPage});\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/oldest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:1})\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/newest-nft\",(req, res) => {\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).limit(1).sort({$natural:-1});\r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found\",errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data});\r\n      }\r\n  })\r\n})\r\n\r\nroutes.get(\"/count-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    res.status(202).json(count)\r\n  })\r\n})\r\n\r\nroutes.post(\"/nft-pagination\",(req, res) => {\r\n  let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);\r\n    limitedNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data[0]!==undefined && data[0]!==null){\r\n        res.status(202).json({nft:data,totalPage:totalPage})\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/feature-nft\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find({featured: true});\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    if(data[0]!==undefined && data[0]!==null){\r\n      res.status(200).json(data)\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"No any Nft is featured\"})\r\n    }\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/feature-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({featured: true}, function(err, documents) {\r\n    if(documents==10 && req.body.isFeatured==true){\r\n      res.status(202).json({message:\"Feature nft limit exceed\"})\r\n    }\r\n    else if(documents==3 && req.body.isFeatured==false){\r\n      res.status(202).json({message:\"Minimum 3 should be featured\"})\r\n    }\r\n    else{\r\n      let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==undefined && data!==null){\r\n          if(data.status==\"active\"){\r\n            let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n              featured: req.body.isFeatured,\r\n            })\r\n            updateNft.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Nft Updated Successfully\"})\r\n            })\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Nft not activated\"})\r\n        }\r\n      }\r\n        else{\r\n          res.status(400).json({message:\"Nft not found\"})\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\nroutes.post(\"/count-nft-category-vise\",(req, res) => {\r\n  if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n  else if(req.body.category==\"All NFTs\"){\r\n    models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n  else{\r\n    models.nftControllerModel.countDocuments({selectedCat:req.body.category}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n})\r\n\r\n\r\nroutes.post(\"/nft-category-vise\",(req, res) => {\r\n  if(req.body.isMarketPlace){\r\n    if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n      res.status(200).json({message:\"Data is not defined\"})\r\n    }\r\n    else if(req.body.category==\"All NFTs\"){\r\n        let limitedNft=models.nftControllerModel.find({isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\"}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(200).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n    }\r\n    else{\r\n        let limitedNft=models.nftControllerModel.find({selectedCat:req.body.category,isOnSell:true,status:\"active\"}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({selectedCat:req.body.category,isOnSell:true,status:\"active\"}, function(err, count) {\r\n          if (err) throw err;\r\n          if(count == undefined || count == null || count == false || count == 0){\r\n            res.status(200).json({message:\"No NFT found for this Category\"})\r\n          }\r\n          else{\r\n            let totalPage=Math.ceil(count/req.body.size);\r\n            limitedNft.exec((err,data)=>{\r\n              if(err) throw err;\r\n              if(data[0]!==undefined && data[0]!==null){\r\n                res.status(202).json({nft:data,totalPage:totalPage})\r\n              }\r\n              else{\r\n                res.status(200).json({message:\"No NFT found for this Category\"})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  else{\r\n    let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      let totalPage=Math.ceil(count/req.body.size);\r\n      limitedNft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        if(data[0]!==undefined && data[0]!==null){\r\n          res.status(202).json({nft:data,totalPage:totalPage})\r\n        }\r\n        else{\r\n          res.status(200).json({message:\"No NFT found\"})\r\n        }\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\n\r\n\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n \r\n\r\nroutes.post(\"/add_slider\",upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(\"400\").json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\r\n      if(documents==10){\r\n        res.status(202).json({msg:\"slider limit exceed\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            let uploadslider= new models.uploadSliderModel({\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            uploadslider.save((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n      });\r\n    }\r\n});\r\n}\r\n});\r\n\r\nroutes.post(\"/update_slider\",upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(400).json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(400).json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n  console.log(req.file);\r\n  fs.readFile(req.file.path, (err, data) => {\r\n    if (err) throw err;\r\n    const params = {\r\n        Bucket: 'closedsea', // pass your bucket name\r\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n        ACL: \"public-read\",\r\n        ContentType: req.file.mimetype,\r\n        Body: data\r\n    };\r\n    s3.upload(params, function(s3Err, data) {\r\n        if (s3Err) throw s3Err\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\r\n          link: req.body.link,\r\n          imageUrl:data.Location\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n    });\r\n });\r\n}\r\n});\r\n\r\nroutes.delete(\"/delete_slider/:id\",upload,(req,res)=>{\r\n  let url=req.query.q.split(\".com/\")[1] ;\r\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\r\n  s3.deleteObject({\r\n    Bucket: \"closedsea\",\r\n    Key: url\r\n  },function (err,data){\r\n    deleteSlider.exec(function(err){\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully deleted\"})\r\n  })\r\n  })\r\n});\r\n\r\nroutes.get(\"/getsliders\",(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    if(name){\r\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\r\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\r\n    \r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });}\r\n    else{\r\n      res.status(200).json({\r\n        message: \"success\",\r\n  \r\n        data: {\r\n          collections:\"\",\r\n          users:\"\"\r\n        }\r\n    })\r\n  }\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index.js"}