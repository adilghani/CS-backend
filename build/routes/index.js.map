{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","use","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","get","req","res","status","message","route","post","body","models","userModel","create","address","toLowerCase","error","console","log","put","userFromDB","findOne","updateOne","runValidators","query","user","lean","exec","find","err","data","existingOne","collectionModel","name","tokenUpdate","findOneAndUpdate","$push","parseInt","tokens","send","owner","nftAddress","avatar","background","description","externalUrl","toString","_id","Error","collection","delete","findOneAndDelete","featureCollectionPath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadcoll","storage","single","undefined","link","readFile","params","Bucket","Key","ACL","ContentType","mimetype","Body","upload","filterFeatureCollection","uploadfeaturemodel","collection_name","imageUrl","Location","profilefilePath","uploadImage","fname","s3Err","collections","select","token","$and","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","includes","new","newUpdatedInfo","viewAndLike","then","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","nft","push","setTimeout","viewedNft","view","follower","following","followers","map","userdata","fdata","msg","followings","account","createAdmin","adminRegisterModel","walletAddress","save","adminData","sign","cookie","expires","Date","now","filterData","updateNft","price","ownerOf","createNft","metadata","selectedCat","tokenUri","countDocuments","count","limitedNft","skip","page","size","limit","totalPage","Math","ceil","featured","documents","isFeatured","filePath","uploadSliderModel","uploadslider","id","url","q","split","deleteSlider","deleteObject","$regex","$options","users","userName","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nconst bodyParser=require(\"body-parser\");\r\nvar uuid = require('uuid');\r\nconst fs = require('fs');\r\nconst AWS = require('aws-sdk')\r\n\r\nroutes.use(cookieParser())\r\n\r\n// Body Parsers\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(bodyParser.json());\r\n\r\nconst s3 = new AWS.S3({\r\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\r\n  secretAccessKey: \"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\"\r\n});\r\n\r\nroutes.get(\"/\", (req, res) => {\r\n  res.status(200).json({ message: \"Connected!\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.userModel.create({\r\n        ...body,\r\n        address: body.address.toLowerCase(),\r\n      });\r\n      res.status(200).json(\"Successfully registered\");\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address: body.address.toLowerCase(),\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.updateOne(\r\n          { address: body.address.toLowerCase() },\r\n          { ...body, address: body.address.toLowerCase() },\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[profile post] error => \", error);\r\n      res.status(500).json({ message: \"Server Error\" });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    const address = req.query.address;\r\n    const user = await models.userModel\r\n      .findOne({ address: address.toLowerCase() })\r\n      .lean()\r\n      .exec();\r\n    res.status(200).json({ ...user });\r\n  });\r\n\r\nroutes.get(\"/get-all-users\", (req, res) => {\r\n    let user = models.userModel.find();\r\n    user.exec((err,data)=>{\r\n      res.status(200).json({data});\r\n    })\r\n});\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      \r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens': parseInt(body.tokens)}\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          tokens: parseInt(body.tokens) || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[collection post] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log(\"aj : **** body => \", body);\r\n      const existingOne = await models.collectionModel.findOne({\r\n        _id: body._id,\r\n      });\r\n      if (!existingOne) {\r\n        throw new Error(\"No exist id\");\r\n      }\r\n      let data = {\r\n        name: body.name?.toLowerCase(),\r\n      };\r\n      if (!!body.avatar) {\r\n        data = { ...data, avatar: body.avatar };\r\n      }\r\n      if (!!body.background) {\r\n        data = { ...data, background: body.background };\r\n      }\r\n      if (!!body.description) {\r\n        data = { ...data, description: body.description };\r\n      }\r\n      if (!!body.externalUrl) {\r\n        data = { ...data, externalUrl: body.externalUrl };\r\n      }\r\n      if (!!body.tokens) {\r\n        data = { ...data, tokens: body.tokens };\r\n      }\r\n      await models.collectionModel.updateOne({ _id: body._id }, data);\r\n      res.status(200).json(\"Successfully updated!\");\r\n    } catch (error) {\r\n      console.log(\"[collection put] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      console.log(\"[collection get] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n    }\r\n  });\r\n\r\n  const featureCollectionPath = path.join(__dirname,\"../\",\"../public/featureCollectionImage/\");\r\n\r\n  // for file upload\r\n  var Storage=multer.diskStorage({\r\n    destination:featureCollectionPath,\r\n    filename:(req,file,cb)=>{\r\n      cb(null,uuid.v4()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var uploadcoll=multer({\r\n    storage:Storage\r\n  }).single('pic');\r\n   \r\n  routes.post(\"/feature_collection\",uploadcoll,(req,res)=>{\r\n    if(req.file == undefined){\r\n      res.status(400).json({message:\"Image is Required\"})\r\n    }\r\n    else if(req.body.link == undefined){\r\n      res.status(400).json({message:\"Link is Required\"})\r\n    }\r\n    else{\r\n    fs.readFile(req.file.path, (err, data) => {\r\n      if (err) throw err;\r\n      const params = {\r\n          Bucket: 'closedsea', // pass your bucket name\r\n          Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n          ACL: \"public-read\",\r\n          ContentType: req.file.mimetype,\r\n          Body: data\r\n      };\r\n      s3.upload(params, function(err, data) {\r\n          if (err) throw err\r\n          let filterFeatureCollection= models.uploadfeaturemodel.findOneAndUpdate({collection_name:req.body.collection},{\r\n            link: req.body.link,\r\n            imageUrl:data.Location\r\n          })\r\n          filterFeatureCollection.exec((err)=>{\r\n            if(err) throw err;\r\n            res.status(200).json({message:\"Success\"})\r\n          })\r\n      });\r\n   });\r\n  }\r\n  });\r\n\r\n  routes.get(\"/feature_collection\", async (req, res) => {\r\n    models.uploadfeaturemodel.find((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(200).json({data})\r\n    })\r\n  })\r\n\r\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\r\n\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:profilefilePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar uploadImage=multer({\r\n  storage:Storage\r\n}).single('file');\r\n \r\nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.body.fname, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            res.status(200).json(data);\r\n        });\r\n      });\r\n    }\r\n})\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = req.query.owner?.toLowerCase();\r\n    const token = req.query.token;\r\n    if(owner && token){\r\n      const collections = await models.collectionModel.find({$and:[ {owner:owner},{tokens:parseInt(token)} ]}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n        $push: {'tokens': parseInt(body.token)}\r\n      })\r\n      tokenUpdate.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully token Added!\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(200).json({message:\"Document not found!\"})\r\n    }\r\n  } catch (error) {\r\n    console.log(\"[collection names] get error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n\r\n      const obj = await models.viewAndLikeModel\r\n        .findOne({ tokenAddr, tokenId })\r\n        .lean()\r\n        .exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] get error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: body.tokenAddr,\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            throw new Error(\"Already viewed\");\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            throw new Error(\"Already Liked\");\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        // if (parseInt(body.views) === parseInt(obj.views)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n\r\n        //LIKE\r\n        // if (parseInt(body.likes) !== parseInt(obj.likes)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n        // if (parseInt(body.likes) === parseInt(obj.likes)) {\r\n        //   if (obj.viewedAddresses?.includes(body.address)) {\r\n        //     throw new Error(\"Already viewed\");\r\n        //   } else {\r\n        //     await models.viewAndLikeModel.updateOne(\r\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\r\n        //     );\r\n        //   }\r\n        // }\r\n\r\n        //BODY VIEWS < DB VIEWS ? 1 < 2 ? THEN CHECK THE ARRAY AND FILTER IT\r\n        // if (parseInt(body.views) < parseInt(obj.views)) {\r\n        //   console.log(\"BEFORE :\" + obj.viewedAddresses);\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) !== []\r\n        //       ? [...obj.viewedAddresses, body.address?.toLowerCase()]\r\n        //       : [];\r\n        // }\r\n        // else if (\r\n        //   parseInt(body.views) === parseInt(obj.views) ||\r\n        //   parseInt(body.views) === 0\r\n        // ) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n\r\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else {\r\n        //   const addresses = [\r\n        //     ...obj.viewedAddresses,\r\n        //     body.address?.toLowerCase(),\r\n        //   ];\r\n\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // }\r\n\r\n        // if (parseInt(body.likes) > parseInt(obj.likes)) {\r\n        //   console.log(\"LIKES\");\r\n        //   if (obj.likedAccounts?.includes(body.address)) {\r\n        //     console.log(\"LIKE INCLUDED\");\r\n        //     throw new Error(\"Already liked\");\r\n        //   } else {\r\n        //     console.log(\"LIKE NOT INCLUDED\");\r\n        //   }\r\n        // }\r\n        // if (parseInt(body.views) < parseInt(obj.views)) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n        //   console.log({ addresses });\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else if (\r\n        //   parseInt(body.views) === parseInt(obj.views) ||\r\n        //   parseInt(body.views) === 0\r\n        // ) {\r\n        //   const addresses =\r\n        //     obj.viewedAddresses?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) === []\r\n        //       ? [...obj.viewedAddresses]\r\n        //       : [];\r\n\r\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // } else {\r\n        //   const addresses = [\r\n        //     ...obj.viewedAddresses,\r\n        //     body.address?.toLowerCase(),\r\n        //   ];\r\n\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { viewedAddresses: addresses }\r\n        //   );\r\n        // }\r\n        // if (parseInt(body.likes) < parseInt(obj.likes)) {\r\n        //   console.log(\"I AM LESS\");\r\n        //   const addresses =\r\n        //     obj.likedAccounts?.filter(\r\n        //       (v) => v !== body.address?.toLowerCase()\r\n        //     ) || [];\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // } else if (\r\n        //   parseInt(body.likes) === parseInt(obj.likes) ||\r\n        //   parseInt(body.likes) === 0\r\n        // ) {\r\n        //   const addresses = obj.likedAccounts?.filter(\r\n        //     (v) => v !== body.address?.toLowerCase()\r\n        //   );\r\n        //   console.log({ addresses });\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // } else {\r\n        //   console.log(\"I AM + 1\");\r\n        //   const addresses = [...obj.likedAccounts, body.address?.toLowerCase()];\r\n        //   await models.viewAndLikeModel.updateOne(\r\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n        //     { likedAccounts: addresses }\r\n        //   );\r\n        // }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: body.tokenAddr?.toLowerCase(), tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: body.tokenAddr?.toLowerCase(),\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"[view and like] post error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\nroutes.get(\"/views_and_likes\",(req, res) => {\r\n    var viewAndLike=models.viewAndLikeModel.find();\r\n    viewAndLike.exec()\r\n    .then((data)=>{\r\n      res.send(data);\r\n    })\r\n    .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\r\n  let likedNft =[];\r\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\r\n    like.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          likedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\r\n    })\r\n})\r\n\r\n\r\nroutes.post(\"/usersviews\",(req, res) => {\r\n  let viewedNft =[];\r\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\r\n    view.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          viewedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/users_follow\",(req, res) => {\r\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\r\n    $push: {'follower': req.body.following}\r\n  })\r\n  follower.exec((err)=>{\r\n    if(err) throw err;\r\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\r\n      $push: {'following': req.body.follower}\r\n    })\r\n    following.exec((err)=>{\r\n      if(err) throw err;\r\n      res.send(\"success\")\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/get-followers\",(req, res) => {\r\n  let followers=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.follower[0]!==undefined && data.follower[0]!==null){\r\n         data.follower.map(function(address){\r\n          let userdata=models.userModel.findOne({address:address});\r\n          userdata.exec((err,fdata)=>{\r\n            if (err) throw err\r\n            if(fdata!==undefined && fdata!==null){\r\n              followers.push(fdata)\r\n            }\r\n          })\r\n        })\r\n          setTimeout(()=>res.status(200).json({followers}),3000);\r\n          }\r\n        else{\r\n          res.status(400).json({msg:\"No followers\"})\r\n        }\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n    })\r\n})\r\n\r\nroutes.post(\"/get-following\",(req, res) => {\r\n  let followings=[];\r\n    var user=models.userModel.findOne({address:req.body.userAddress});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.following[0]!==undefined && data.following[0]!==null){\r\n          data.following.map(function(address){\r\n            let userdata=models.userModel.findOne({address:address});\r\n            userdata.exec((err,fdata)=>{\r\n              if (err) throw err\r\n              if(fdata!==undefined && fdata!==null){\r\n                followings.push(fdata)\r\n              }\r\n            })\r\n          })\r\n        setTimeout(()=>res.status(200).json({followings}),3000);\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No followings\"})\r\n      }\r\n    }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n  })\r\n})\r\n\r\nroutes.post(\"/admin-register\",(req, res) => {\r\n  if(req.body.account){\r\n    let createAdmin=new models.adminRegisterModel({\r\n      walletAddress: req.body.account,\r\n    })\r\n    createAdmin.save(function(){\r\n      res.send(\"Admin Stored Succcesfully\");\r\n    });\r\n  }\r\n  else{\r\n    res.status.send(\"address are empty\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",(req, res) => {\r\n  let adminData=models.adminRegisterModel.findOne({walletAddress:req.body.account});\r\n  adminData.exec()\r\n  .then((data)=>{\r\n    if(data){\r\n      const token=jwt.sign({walletAddress:req.body.account},\"walletaddress12345678123456781234\")\r\n      res.cookie('closedSeaAdmin',token,{expires:new Date(Date.now()+6000000)})\r\n      res.status(200).send(\"Sucessfull Login\")\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  })\r\n  .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.get(\"/nft-collector\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.status(200).json(data)\r\n  })\r\n  .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Updated Success\"})\r\n      })\r\n    }\r\n    else{\r\n      let createNft=new models.nftControllerModel({\r\n        tokenAddr: req.body.tokenAddr,\r\n        tokenId: req.body.tokenId,\r\n        price: req.body.price,\r\n        owner:req.body.ownerOf,\r\n        metadata: req.body.metadata,\r\n        selectedCat:req.body.selectedCat,\r\n        tokenUri:req.body.tokenUri,\r\n        status:\"pending\"\r\n      })\r\n      createNft.save(function(){\r\n        res.status(200).json({message:\"Success\"})\r\n    });\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/update-nft-status\",(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==undefined && data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n        status: req.body.status,\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Status Updated Successfully\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Nft not found\"})\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.get(\"/count-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    res.status(202).json(count)\r\n  })\r\n})\r\n\r\nroutes.post(\"/nft-pagination\",(req, res) => {\r\n  let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);\r\n    console.log(totalPage)\r\n    limitedNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data[0]!==undefined && data[0]!==null){\r\n        res.status(202).json({nft:data,totalPage:totalPage})\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.get(\"/feature-nft\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find({featured: true});\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    if(data[0]!==undefined && data[0]!==null){\r\n      res.status(200).json(data)\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"No any Nft is featured\"})\r\n    }\r\n  })\r\n  .catch((err)=>console.log(err))\r\n})\r\n\r\nroutes.post(\"/feature-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({featured: true}, function(err, documents) {\r\n    if(documents==10 && req.body.isFeatured==true){\r\n      res.status(202).json({message:\"Feature nft limit exceed\"})\r\n    }\r\n    else if(documents==3 && req.body.isFeatured==false){\r\n      res.status(202).json({message:\"Minimum 3 should be featured\"})\r\n    }\r\n    else{\r\n      let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==undefined && data!==null){\r\n          if(data.status==\"active\"){\r\n            let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId},{\r\n              featured: req.body.isFeatured,\r\n            })\r\n            updateNft.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Nft Updated Successfully\"})\r\n            })\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Nft not activated\"})\r\n        }\r\n      }\r\n        else{\r\n          res.status(400).json({message:\"Nft not found\"})\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n \r\n\r\nroutes.post(\"/add_slider\",upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(\"400\").json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\r\n      if(documents==10){\r\n        res.status(202).json({msg:\"slider limit exceed\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            let uploadslider= new models.uploadSliderModel({\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            uploadslider.save((err)=>{\r\n              if(err) throw err;\r\n              console.log(`File uploaded successfully at ${data.Location}`)\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n      });\r\n    }\r\n});\r\n}\r\n});\r\n\r\nroutes.post(\"/update_slider\",upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(400).json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(400).json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n  console.log(req.file);\r\n  fs.readFile(req.file.path, (err, data) => {\r\n    if (err) throw err;\r\n    const params = {\r\n        Bucket: 'closedsea', // pass your bucket name\r\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n        ACL: \"public-read\",\r\n        ContentType: req.file.mimetype,\r\n        Body: data\r\n    };\r\n    s3.upload(params, function(s3Err, data) {\r\n        if (s3Err) throw s3Err\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\r\n          link: req.body.link,\r\n          imageUrl:data.Location\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          console.log(`File uploaded successfully at ${data.Location}`)\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n    });\r\n });\r\n}\r\n});\r\n\r\nroutes.delete(\"/delete_slider/:id\",upload,(req,res)=>{\r\n  let url=req.query.q.split(\".com/\")[1] ;\r\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\r\n  s3.deleteObject({\r\n    Bucket: \"closedsea\",\r\n    Key: url\r\n  },function (err,data){\r\n    deleteSlider.exec(function(err){\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully deleted\"})\r\n  })\r\n  })\r\n});\r\n\r\nroutes.get(\"/getsliders\",(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    // const resp = await models.userModel.find({\r\n    //   username: \"OneDabLife \",\r\n    // });\r\n    if(name){\r\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\r\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\r\n    \r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });}\r\n    else{\r\n      res.status(200).json({\r\n        message: \"success\",\r\n  \r\n        data: {\r\n          collections:\"\",\r\n          users:\"\"\r\n        }\r\n    })\r\n  }\r\n    // const obj = await models.viewAndLikeModel\r\n    //   .findOne({ tokenAddr, tokenId })\r\n    //   .lean()\r\n    //   .exec();\r\n  } catch (error) {\r\n    console.log(\"Search Error => \", error);\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index.js"}