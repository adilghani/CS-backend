{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","cookie","get","req","res","status","json","message","route","post","body","models","userModel","create","address","toLowerCase","error","console","log","put","userFromDB","findOne","updateOne","runValidators","query","user","lean","exec","existingOne","collectionModel","name","Error","owner","nftAddress","avatar","background","description","externalUrl","tokens","toString","_id","data","collection","delete","findOneAndDelete","collections","find","select","token","tokenAddr","tokenId","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","parseInt","includes","findOneAndUpdate","new","newUpdatedInfo","account","createAdmin","adminRegisterModel","walletAddress","save","send","adminData","then","sign","expires","Date","now","catch","err","nftdata","nftControllerModel","header","createNft","price","metadata","imageUrl","externalLink","tokenUri","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\nconst routes = require(\"express\").Router();\nconst jwt=require(\"jsonwebtoken\")\nconst cookie=require(\"cookie-parser\");\n\nroutes.get(\"/\", (req, res) => {\n  res.status(200).json({ message: \"Connected!\" });\n});\n\nroutes\n  .route(\"/profile\")\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      await models.userModel.create({\n        ...body,\n        address: body.address.toLowerCase(),\n      });\n      res.status(200).json(\"Successfully registered\");\n    } catch (error) {\n      console.log(\"[profile post] error => \", error);\n      res.status(500).json({ message: \"Server Error\" });\n    }\n  })\n  .put(async (req, res) => {\n    try {\n      const { body } = req;\n      const userFromDB = await models.userModel.findOne({\n        address: body.address.toLowerCase(),\n      });\n      if (userFromDB) {\n        await models.userModel.updateOne(\n          { address: body.address.toLowerCase() },\n          { ...body, address: body.address.toLowerCase() },\n          { runValidators: true }\n        );\n        res.status(200).json(\"Successfully updated\");\n      } else {\n        res.status(500).json({ message: \"User not registered yet.\" });\n      }\n    } catch (error) {\n      console.log(\"[profile post] error => \", error);\n      res.status(500).json({ message: \"Server Error\" });\n    }\n  })\n  .get(async (req, res) => {\n    const address = req.query.address;\n    const user = await models.userModel\n      .findOne({ address: address.toLowerCase() })\n      .lean()\n      .exec();\n    res.status(200).json({ ...user });\n  });\n\nroutes\n  .route(\"/collection\")\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      const existingOne = await models.collectionModel.findOne({\n        name: body.name,\n      });\n      if (existingOne) {\n        throw new Error(\"Already Exist name\");\n      }\n      await models.collectionModel.create({\n        name: body.name,\n        owner: body.owner?.toLowerCase(),\n        nftAddress: body.nftAddress?.toLowerCase(),\n        avatar: body.avatar,\n        background: body.background,\n        description: body.description,\n        externalUrl: body.externalUrl,\n        tokens: body.tokens || [],\n      });\n      res.status(200).json(\"Successfully created!\");\n    } catch (error) {\n      console.log(\"[collection post] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .put(async (req, res) => {\n    try {\n      const { body } = req;\n      console.log(\"aj : **** body => \", body);\n      const existingOne = await models.collectionModel.findOne({\n        _id: body._id,\n      });\n      if (!existingOne) {\n        throw new Error(\"No exist id\");\n      }\n      let data = {\n        name: body.name?.toLowerCase(),\n      };\n      if (!!body.avatar) {\n        data = { ...data, avatar: body.avatar };\n      }\n      if (!!body.background) {\n        data = { ...data, background: body.background };\n      }\n      if (!!body.description) {\n        data = { ...data, description: body.description };\n      }\n      if (!!body.externalUrl) {\n        data = { ...data, externalUrl: body.externalUrl };\n      }\n      if (!!body.tokens) {\n        data = { ...data, tokens: body.tokens };\n      }\n      await models.collectionModel.updateOne({ _id: body._id }, data);\n      res.status(200).json(\"Successfully updated!\");\n    } catch (error) {\n      console.log(\"[collection put] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .get(async (req, res) => {\n    try {\n      const name = req.query.name;\n      const collection = await models.collectionModel\n        .findOne({ name })\n        .lean()\n        .exec();\n      res.status(200).json({ ...collection });\n    } catch (error) {\n      console.log(\"[collection get] error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .delete(async (req, res) => {\n    try {\n      const { body } = req;\n      const existingOne = await models.collectionModel.findOneAndDelete({\n        _id: body._id,\n      });\n      return res.status(200).json(\"Successfully deleted\");\n    } catch (error) {\n      console.log(\"[collection delete] error => \", error);\n    }\n  });\n\nroutes.get(\"/collection-names\", async (req, res) => {\n  try {\n    const collections = await models.collectionModel\n      .find({})\n      .select(\"name -_id\")\n      .exec();\n    res.status(200).json(collections);\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes.get(\"/my-collections\", async (req, res) => {\n  try {\n    const owner = req.query.owner?.toLowerCase();\n    const collections = await models.collectionModel\n      .find({ owner })\n      .lean()\n      .exec();\n    console.log(\"aj : ***** collections => \", collections);\n    res.status(200).json(collections);\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\n  try {\n    const { body } = req;\n    const collection = await models.collectionModel\n      .find({ name: body.name })\n      .lean()\n      .exec();\n    if (collection) {\n      const tokens = collection.tokens\n        ? [...collection.tokens, body.token]\n        : [body.token];\n      await models.collectionModel.updateOne({ name: body.name }, { tokens });\n      res.status(200).json(\"success\");\n    }\n  } catch (error) {\n    console.log(\"[collection names] get error => \", error);\n    res.status(500).json({ message: error.toString() });\n  }\n});\n\nroutes\n  .route(\"/view-and-like\")\n  .get(async (req, res) => {\n    try {\n      const { tokenAddr, tokenId } = req.query;\n\n      const obj = await models.viewAndLikeModel\n        .findOne({ tokenAddr, tokenId })\n        .lean()\n        .exec();\n\n      if (obj) {\n        res.status(200).json({ ...obj });\n      } else {\n        res.status(200).json({\n          views: 0,\n          likes: 0,\n          tokenAddr,\n          tokenId,\n          likedAccounts: [],\n          viewedAddresses: [],\n        });\n      }\n    } catch (error) {\n      console.log(\"[view and like] get error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  })\n  .post(async (req, res) => {\n    try {\n      const { body } = req;\n      console.log({ body });\n      const obj = await models.viewAndLikeModel.findOne({\n        tokenAddr: body.tokenAddr,\n        tokenId: body.tokenId,\n      });\n      console.log({ obj });\n      if (obj) {\n        // update\n\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\n        if (\n          (parseInt(body.views) !== parseInt(obj.views) &&\n            parseInt(body.views) !== 0) ||\n          (parseInt(body.views) === parseInt(obj.views) &&\n            parseInt(body.views) !== 0)\n        ) {\n          if (obj.viewedAddresses?.includes(body.address)) {\n            throw new Error(\"Already viewed\");\n          } else {\n            await models.viewAndLikeModel.findOneAndUpdate(\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\n              { new: true }\n            );\n          }\n        }\n\n        if (\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\n            parseInt(body.likes) !== 0) ||\n          (parseInt(body.likes) === parseInt(obj.likes) &&\n            parseInt(body.likes) !== 0)\n        ) {\n          if (obj.likedAccounts?.includes(body.address)) {\n            throw new Error(\"Already Liked\");\n          }\n          //else if\n          else {\n            await models.viewAndLikeModel.findOneAndUpdate(\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n              { likedAccounts: [...obj.likedAccounts, body.address] },\n              { new: true }\n            );\n          }\n        }\n\n        // if (parseInt(body.views) === parseInt(obj.views)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n\n        //LIKE\n        // if (parseInt(body.likes) !== parseInt(obj.likes)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n        // if (parseInt(body.likes) === parseInt(obj.likes)) {\n        //   if (obj.viewedAddresses?.includes(body.address)) {\n        //     throw new Error(\"Already viewed\");\n        //   } else {\n        //     await models.viewAndLikeModel.updateOne(\n        //       { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //       { viewedAddresses: [...obj.viewedAddresses, body.address] }\n        //     );\n        //   }\n        // }\n\n        //BODY VIEWS < DB VIEWS ? 1 < 2 ? THEN CHECK THE ARRAY AND FILTER IT\n        // if (parseInt(body.views) < parseInt(obj.views)) {\n        //   console.log(\"BEFORE :\" + obj.viewedAddresses);\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) !== []\n        //       ? [...obj.viewedAddresses, body.address?.toLowerCase()]\n        //       : [];\n        // }\n        // else if (\n        //   parseInt(body.views) === parseInt(obj.views) ||\n        //   parseInt(body.views) === 0\n        // ) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else {\n        //   const addresses = [\n        //     ...obj.viewedAddresses,\n        //     body.address?.toLowerCase(),\n        //   ];\n\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // }\n\n        // if (parseInt(body.likes) > parseInt(obj.likes)) {\n        //   console.log(\"LIKES\");\n        //   if (obj.likedAccounts?.includes(body.address)) {\n        //     console.log(\"LIKE INCLUDED\");\n        //     throw new Error(\"Already liked\");\n        //   } else {\n        //     console.log(\"LIKE NOT INCLUDED\");\n        //   }\n        // }\n        // if (parseInt(body.views) < parseInt(obj.views)) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n        //   console.log({ addresses });\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else if (\n        //   parseInt(body.views) === parseInt(obj.views) ||\n        //   parseInt(body.views) === 0\n        // ) {\n        //   const addresses =\n        //     obj.viewedAddresses?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) === []\n        //       ? [...obj.viewedAddresses]\n        //       : [];\n\n        //   console.log(\"I AM VIEW ADDRESS === or 0\" + addresses);\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // } else {\n        //   const addresses = [\n        //     ...obj.viewedAddresses,\n        //     body.address?.toLowerCase(),\n        //   ];\n\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { viewedAddresses: addresses }\n        //   );\n        // }\n        // if (parseInt(body.likes) < parseInt(obj.likes)) {\n        //   console.log(\"I AM LESS\");\n        //   const addresses =\n        //     obj.likedAccounts?.filter(\n        //       (v) => v !== body.address?.toLowerCase()\n        //     ) || [];\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // } else if (\n        //   parseInt(body.likes) === parseInt(obj.likes) ||\n        //   parseInt(body.likes) === 0\n        // ) {\n        //   const addresses = obj.likedAccounts?.filter(\n        //     (v) => v !== body.address?.toLowerCase()\n        //   );\n        //   console.log({ addresses });\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // } else {\n        //   console.log(\"I AM + 1\");\n        //   const addresses = [...obj.likedAccounts, body.address?.toLowerCase()];\n        //   await models.viewAndLikeModel.updateOne(\n        //     { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\n        //     { likedAccounts: addresses }\n        //   );\n        // }\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\n          { tokenAddr: body.tokenAddr?.toLowerCase(), tokenId: body.tokenId },\n          {\n            views: obj.views + body.views,\n            likes: obj.likes + body.likes,\n          },\n          { new: true }\n        );\n        res.status(200).json(newUpdatedInfo);\n      } else {\n        await models.viewAndLikeModel.create({\n          tokenAddr: body.tokenAddr?.toLowerCase(),\n          tokenId: body.tokenId,\n          views: body.views > 0 ? 1 : 0,\n          likes: body.likes > 0 ? 1 : 0,\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\n        });\n      }\n    } catch (error) {\n      console.log(\"[view and like] post error => \", error);\n      res.status(500).json({ message: error.toString() });\n    }\n  });\n\n\nroutes.post(\"/admin-register\",(req, res) => {\n  if(req.body.account){\n    let createAdmin=new models.adminRegisterModel({\n      walletAddress: req.body.account,\n    })\n    createAdmin.save(function(){\n      res.send(\"Admin Stored Succcesfully\");\n    });\n  }\n  else{\n    res.status.send(\"address are empty\")\n  }\n})\n\nroutes.post(\"/admin-login\",(req, res) => {\n  let adminData=models.adminRegisterModel.findOne({walletAddress:req.body.account});\n  adminData.exec()\n  .then((data)=>{\n    if(data){\n      const token=jwt.sign({walletAddress:req.body.account},\"walletaddress12345678123456781234\")\n      res.cookie('closedSeaAdmin',token,{expires:new Date(Date.now()+6000000)})\n      res.status(200).send(\"Sucessfull Login\")\n    }\n    else{\n      res.status(400).send(\"Wallet Not Found\")\n    }\n  })\n  .catch((err)=>console.log(err))\n})\n\nroutes.get(\"/nft-collector\",(req, res) => {\n  var nftdata=models.nftControllerModel.find();\n  nftdata.exec()\n  .then((data)=>{\n    res.header( \"Access-Control-Allow-Origin\" );\n    res.send(data);\n  })\n  .catch((err)=>console.log(err))\n})\n\nroutes.post(\"/nft-collector\",(req, res) => {\n    let createNft=new models.nftControllerModel({\n        tokenAddr: req.body.tokenAddr,\n        tokenId: req.body.tokenId,\n        price: req.body.price,\n        metadata: {\n            imageUrl:req.body.metadata.imageUrl,\n            name:req.body.metadata.name,\n            description:req.body.metadata.description,\n            externalLink:req.body.metadata.externalLink\n          },\n        tokenUri:req.body.tokenUri\n    })\n    createNft.save(function(){\n      res.send(\"done\");\n    });\n})\n\nmodule.exports = routes;"],"file":"index.js"}