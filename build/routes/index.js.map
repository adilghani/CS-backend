{"version":3,"sources":["../../src/routes/index.js"],"names":["routes","require","Router","jwt","multer","cookieParser","path","bodyParser","uuid","fs","AWS","secret","use","apiAuth","urlencoded","extended","json","s3","S3","accessKeyId","secretAccessKey","userAuth","auth","req","res","next","authHeader","header","token","decode","status","message","startsWith","substring","length","verify","err","walletAddress","decryptedData","models","adminRegisterModel","findOne","exec","get","route","post","body","check","userModel","address","console","log","undefined","userName","description","avatar","background","twitter","facebook","instagram","isVerified","save","error","put","userFromDB","findOneAndUpdate","runValidators","query","user","lean","isverified","VerifiedCollection","auction","auctionUser","User","find","$or","data","existingOne","collectionModel","name","tokenUpdate","$push","parseInt","tokens","category","send","create","owner","toLowerCase","nftAddress","externalUrl","_id","updateOne","collection","delete","findOneAndDelete","toString","$each","featureCollectionPath","join","__dirname","Storage","diskStorage","destination","filename","file","cb","v4","extname","originalname","uploadcoll","storage","single","link","readFile","params","Bucket","Key","ACL","ContentType","mimetype","Body","upload","filterFeatureCollection","uploadfeaturemodel","collection_name","imageUrl","Location","profilefilePath","uploadImage","fname","s3Err","collections","select","decimal","chainId","filterData","skip","page","size","limit","countDocuments","count","totalPage","Math","ceil","errs","nft","sort","$natural","tokenId","tokenAddress","$elemMatch","tokenAddr","obj","viewAndLikeModel","views","likes","likedAccounts","viewedAddresses","includes","new","newUpdatedInfo","viewAndLike","then","catch","likedNft","like","userAddress","forEach","nftdata","nftControllerModel","push","setTimeout","noti","notificationmodel","viewedNft","view","follower","following","followers","map","userdata","fdata","msg","followings","email","adminData","createAdmin","jwtData","expiresIn","sign","hexa","String","Nft","tokenIds","i","findNft","id","nftToken","Object","keys","updateNft","price","ownerOf","selectedCat","isOnSell","createNft","metadata","tokenUri","relatedCollectionId","$and","$ne","externalNft","nfts","storeNFT","limitedNft","$regex","$options","aggregate","$match","$lookup","from","let","pipeline","$expr","$eq","as","$unwind","$addFields","$facet","$skip","$limit","Total","$group","$sum","mostLikedNft","leastLikedNft","$gt","startPrice","$lt","endPrice","limitedCollection","featured","documents","isFeatured","isMarketPlace","filePath","uploadSliderModel","uploadslider","url","q","split","deleteSlider","deleteObject","users","module","exports"],"mappings":"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","sourcesContent":["import models from \"~/models\";\r\nconst routes = require(\"express\").Router();\r\nconst jwt=require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\");\r\nvar cookieParser = require('cookie-parser')\r\nconst path=require(\"path\");\r\nconst bodyParser=require(\"body-parser\");\r\nvar uuid = require('uuid');\r\nconst fs = require('fs');\r\nconst AWS = require('aws-sdk')\r\nconst secret=\"1b4b2481e997ff0b8be28106f97040aa d4cb154b4a0b7e135354946c2b572110 b5d60d263e8e9596acd942a9402b23e0 e2705442w261f902b08fa9d220e3c906037 b8184ea414e848d2323838b30367703be82e c4e417215bb9dsddd4d231a8df5799d7f84 eb3e951fd15ae401513b56c684514ea3\";\r\nroutes.use(cookieParser())\r\nconst apiAuth=require(\"./middleware\")\r\n\r\n// Body Parsers\r\nroutes.use(bodyParser.urlencoded({ extended: false }));\r\nroutes.use(bodyParser.json());\r\n\r\nconst s3 = new AWS.S3({\r\n  accessKeyId: \"AKIASAFVMRRSMD5RISOV\",\r\n  secretAccessKey: \"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\"\r\n});\r\n\r\nroutes.use(apiAuth.userAuth)\r\n\r\nasync function auth(req, res, next) {\r\n  var authHeader = req.header('authorization');\r\n  let token,decode;\r\n  if (!authHeader){\r\n    res.status(500).json({message:\"Token is not defined\"})\r\n  } \r\n  else if (authHeader.startsWith(\"Bearer \")){\r\n    token = authHeader.substring(7, authHeader.length);\r\n    jwt.verify(token, secret, async function(err, decode) {\r\n      if (err) {\r\n        res.status(400).json({message:\"You Token is expired\"})\r\n      }\r\n      else{\r\n        if(decode?.walletAddress){\r\n          var decryptedData = await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+decode.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n          if(decryptedData){\r\n            next()\r\n          }\r\n          else{\r\n            res.status(400).json({message:\"You are not authorized person\"})\r\n          }\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Your token is not valid/expired\"})\r\n        }\r\n      }\r\n    });\r\n  } \r\n  else {\r\n    jwt.verify(token, secret, async function(err, decode) {\r\n      if (err) {\r\n        res.status(400).json({message:\"You Token is expired\"})\r\n      }\r\n      else{\r\n        if(decode?.walletAddress){\r\n          var decryptedData = await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+decode.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n          if(decryptedData){\r\n            next()\r\n          }\r\n          else{\r\n            res.status(400).json({message:\"You are not authorized person\"})\r\n          }\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Your token is not valid/expired\"})\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nroutes.get(\"/\",(req, res) => {\r\n  res.status(200).json({ message: \"ClosedSea Backend Service\" });\r\n});\r\n\r\nroutes\r\n  .route(\"/profile\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      let check = await models.userModel.findOne({address: {'$regex' : '^'+body.address+'$', \"$options\": \"i\"}}).exec();\r\n      console.log(check)\r\n      if(check !== null && check !== undefined){\r\n        res.status(200).json({ message: \"This wallet address is already exist\" });\r\n      }\r\n      else{\r\n        await new models.userModel({\r\n          address: body.address,\r\n          userName: body.userName,\r\n          description: body.description,\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          twitter: body.twitter,\r\n          facebook:body.facebook,\r\n          instagram: body.instagram,\r\n          isVerified:body.isVerified\r\n        }).save();\r\n        res.status(200).json(\"Successfully registered\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\",error:error.message });\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const userFromDB = await models.userModel.findOne({\r\n        address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"},\r\n      });\r\n      if (userFromDB) {\r\n        await models.userModel.findOneAndUpdate({address:{'$regex' : '^'+body.address+'$', \"$options\": \"i\"}},{ ...body},\r\n          { runValidators: true }\r\n        );\r\n        res.status(200).json(\"Successfully updated\");\r\n      } else {\r\n        res.status(500).json({ message: \"User not registered yet.\" });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try{\r\n      const address = req.query.address;\r\n      const user = await models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}}).lean().exec();\r\n      res.status(200).json({ ...user });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\nroutes.post(\"/verified_user\",(req,res)=>{\r\n    try{ \r\n      if(!req.body.address || req.body.isverified == undefined){\r\n        res.status(500).json({message:\"Parameters are wrong\"})\r\n      }\r\n      else{\r\n        let VerifiedCollection= models.userModel.findOneAndUpdate({address:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}},{\r\n          isVerified: req.body.isverified\r\n        })\r\n        VerifiedCollection.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Successfully Verified\"})\r\n        })\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  \r\nroutes.post(\"/auction_user\",(req,res)=>{\r\n    try{ \r\n      if(!req.body.address || req.body.auction == undefined){\r\n        res.status(500).json({message:\"Parameters are wrong\"})\r\n      }\r\n      else{\r\n        let auctionUser= models.userModel.findOneAndUpdate({address:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}},{\r\n          auction:req.body.auction\r\n        })\r\n        auctionUser.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nroutes.post(\"/search_user\",(req,res)=>{\r\n    try{ \r\n        let User= models.userModel.find({$or:[{address:{'$regex' : '^'+req.body.user+'$', \"$options\": \"i\"}},{userName:{'$regex' : req.body.user, \"$options\": \"i\"}}]})\r\n        User.exec((err,data)=>{\r\n          if(err) throw err;\r\n          res.status(200).json(data)\r\n        })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nroutes.get(\"/get-all-users\", (req, res) => {\r\n  try{\r\n    let user = models.userModel.find();\r\n    user.exec((err,data)=>{\r\n      res.status(200).json({data});\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/collection\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n      \r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens.tokenId': parseInt(body.tokens)},\r\n          category:body.category\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          category:body.category,\r\n          tokens: {\"tokenId\":parseInt(body.tokens)} || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({_id: body._id,}).lean().exec();\r\n      if (!existingOne) {\r\n        return res.status(500).json(\"No exist id\");\r\n      }\r\n      else{\r\n        let data = {\r\n          name: body.name\r\n        };\r\n        if (!!body.avatar) {\r\n          data = { ...data, avatar: body.avatar };\r\n        }\r\n        if (!!body.background) {\r\n          data = { ...data, background: body.background };\r\n        }\r\n        if (!!body.description) {\r\n          data = { ...data, description: body.description };\r\n        }\r\n        if (!!body.externalUrl) {\r\n          data = { ...data, externalUrl: body.externalUrl };\r\n        }\r\n        if (!!body.tokens) {\r\n          data = { ...data, tokens: body.tokens };\r\n        }\r\n        if (!!body.category) {\r\n          data = { ...data, category:body.category };\r\n        }\r\n        await models.collectionModel.updateOne({ _id: body._id }, data);\r\n        res.status(200).json(\"Successfully updated!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n\r\n// Version 2 of Collection API\r\nroutes\r\n  .route(\"/collection/v2\")\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({\r\n        name: body.name,\r\n      });\r\n\r\n      if (existingOne) {\r\n        let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n          $push: {'tokens':{ $each: body.tokens}},\r\n          category:body.category\r\n        })\r\n        tokenUpdate.exec((err)=>{\r\n          if(err) throw err;\r\n          res.send(\"Successfully token Added!\")\r\n        })\r\n      }\r\n      else{\r\n        await models.collectionModel.create({\r\n          name: body.name,\r\n          owner: body.owner?.toLowerCase(),\r\n          nftAddress: body.nftAddress?.toLowerCase(),\r\n          avatar: body.avatar,\r\n          background: body.background,\r\n          description: body.description,\r\n          externalUrl: body.externalUrl,\r\n          category:body.category,\r\n          tokens: body.tokens || [],\r\n        });\r\n        res.status(200).json(\"Successfully created!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .put(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      const existingOne = await models.collectionModel.findOne({_id: body._id,}).lean().exec();\r\n      if (!existingOne) {\r\n        return res.status(500).json(\"No exist id\");\r\n      }\r\n      else{\r\n        let data = {\r\n          name: body.name\r\n        };\r\n        if (!!body.avatar) {\r\n          data = { ...data, avatar: body.avatar };\r\n        }\r\n        if (!!body.background) {\r\n          data = { ...data, background: body.background };\r\n        }\r\n        if (!!body.description) {\r\n          data = { ...data, description: body.description };\r\n        }\r\n        if (!!body.externalUrl) {\r\n          data = { ...data, externalUrl: body.externalUrl };\r\n        }\r\n        if (!!body.tokens) {\r\n          data = { ...data, tokens: body.tokens};\r\n        }\r\n        if (!!body.category) {\r\n          data = { ...data, category:body.category };\r\n        }\r\n        await models.collectionModel.updateOne({ _id: body._id }, data);\r\n        res.status(200).json(\"Successfully updated!\");\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .get(async (req, res) => {\r\n    try {\r\n      const name = req.query.name;\r\n      const collection = await models.collectionModel\r\n        .findOne({ name })\r\n        .lean()\r\n        .exec();\r\n      res.status(200).json({ ...collection });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .delete(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      await models.collectionModel.findOneAndDelete({\r\n        _id: body._id,\r\n      });\r\n      return res.status(200).json(\"Successfully deleted\");\r\n    } catch (error) {\r\n      console.log(\"[collection delete] error => \", error);\r\n      res.status(500).json({ message: error.toString() });\r\n    }\r\n  });\r\n\r\n\r\n  const featureCollectionPath = path.join(__dirname,\"../\",\"../public/featureCollectionImage/\");\r\n  // for file upload\r\n  var Storage=multer.diskStorage({\r\n    destination:featureCollectionPath,\r\n    filename:(req,file,cb)=>{\r\n      cb(null,uuid.v4()+path.extname(file.originalname))\r\n    }\r\n  })\r\n  \r\n  var uploadcoll=multer({\r\n    storage:Storage\r\n  }).single('pic');\r\n   \r\n  routes.post(\"/feature_collection\",auth,uploadcoll,(req,res)=>{\r\n    try {\r\n      if(req.file == undefined){\r\n        res.status(400).json({message:\"Image is Required\"})\r\n      }\r\n      else if(req.body.link == undefined){\r\n        res.status(400).json({message:\"Link is Required\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(err, data) {\r\n            if (err) throw err\r\n            let filterFeatureCollection= models.uploadfeaturemodel.findOneAndUpdate({collection_name:req.body.collection},{\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            filterFeatureCollection.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n    });\r\n    }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n});\r\n\r\n  routes.get(\"/feature_collection\", async (req, res) => {\r\n    try{\r\n      models.uploadfeaturemodel.find().lean().exec((err,data)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({data})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\n  routes.post(\"/verified_collection\",(req,res)=>{\r\n   try{\r\n      let VerifiedCollection= models.collectionModel.findOneAndUpdate({name:req.body.collection_name},{\r\n        isVerified: req.body.isverified\r\n      })\r\n      VerifiedCollection.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully Verified\"})\r\n      })\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n\r\nconst profilefilePath = path.join(__dirname,\"../\",\"../public/commonimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:profilefilePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar uploadImage=multer({\r\n  storage:Storage\r\n}).single('file');\r\n \r\nroutes.post(\"/upload_file_to_s3\",uploadImage,(req,res)=>{\r\n try{\r\n    if(req.file == undefined){\r\n      res.status(\"400\").json({message:\"Image is Required\"})\r\n    }\r\n    else{\r\n        fs.readFile(req.file.path, (err, data) => {\r\n          if (err) throw err;\r\n          const params = {\r\n              Bucket: 'closedsea', // pass your bucket name\r\n              Key: req.body.fname, // file will be saved\r\n              ACL: \"public-read\",\r\n              ContentType: req.file.mimetype,\r\n              Body: data\r\n          };\r\n          s3.upload(params, function(s3Err, data) {\r\n              if (s3Err) throw s3Err\r\n              res.status(200).json(data);\r\n          });\r\n        });\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/collection-names\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel\r\n      .find({})\r\n      .select(\"name -_id\")\r\n      .exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.get(\"/get-all-collections\", async (req, res) => {\r\n  try {\r\n    const collections = await models.collectionModel.find().lean().exec();\r\n    res.status(200).json(collections);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.post(\"/get-verified-collection\",(req, res) => {\r\n  try{\r\n    let decimal=parseInt(req.body.chainId);\r\n    let filterData=models.collectionModel.find({isVerified:true}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size)).lean();\r\n    models.collectionModel.countDocuments({isVerified:true}, function(err, count) {\r\n      let totalPage=Math.ceil(count/parseInt(req.body.size));  \r\n      filterData.exec(async(err,data)=>{\r\n          if (err) throw err;\r\n          if(data[0]==undefined || data[0]==null){\r\n            res.status(200).json({message:\"No Collection found\",errs:true});\r\n          }\r\n          else{\r\n            res.status(200).json({nft:data,totalPage:totalPage});\r\n          }\r\n      })\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.post(\"/oldest-collection\",(req, res) => {\r\n  try{\r\n    let decimal=parseInt(req.body.chainId);\r\n    let filterData=models.collectionModel.find().sort({$natural:1}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size)).lean();\r\n    models.collectionModel.countDocuments( function(err, count) {\r\n      let totalPage=Math.ceil(count/parseInt(req.body.size));  \r\n      filterData.exec(async(err,data)=>{\r\n          if (err) throw err;\r\n          if(data[0]==undefined || data[0]==null){\r\n            res.status(200).json({message:\"No Collection found\",errs:true});\r\n          }\r\n          else{\r\n            res.status(200).json({nft:data,totalPage:totalPage});\r\n          }\r\n      })\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.post(\"/newest-collection\",(req, res) => {\r\n  try{\r\n  let decimal=parseInt(req.body.chainId);\r\n  let filterData=models.collectionModel.find().sort({$natural:-1}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size)).lean();\r\n    models.collectionModel.countDocuments(function(err, count) {\r\n      let totalPage=Math.ceil(count/parseInt(req.body.size));  \r\n      filterData.exec(async(err,data)=>{\r\n          if (err) throw err;\r\n          if(data[0]==undefined || data[0]==null){\r\n            res.status(200).json({message:\"No Collection found\",errs:true});\r\n          }\r\n          else{\r\n            res.status(200).json({nft:data,totalPage:totalPage});\r\n          }\r\n      })\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.get(\"/my-collections\", async (req, res) => {\r\n  try {\r\n    const owner = { '$regex' : '^'+req.query.owner+'$', \"$options\": \"i\" };\r\n    const token = req.query.token;\r\n    if(owner && token){\r\n      const collections = await models.collectionModel.find({owner:owner,\"tokens.tokenId\": parseInt(token)}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.get(\"/my-collections/v2\", async (req, res) => {\r\n  try {\r\n    const owner = { '$regex' : '^'+req.query.owner+'$', \"$options\": \"i\" };\r\n    if(owner && req.query.tokenId && req.query.tokenAddress){\r\n      const collections = await models.collectionModel.find({owner:owner,tokens:{$elemMatch:{tokenId: parseInt(req.query.tokenId),tokenAddress: {'$regex': '^'+req.query.tokenAddress+'$','$options': 'i'}}}}).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else if(owner){\r\n      const collections = await models.collectionModel.find({ owner }).lean().exec();\r\n      res.status(200).json(collections);\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Required value not found\"});\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes.put(\"/insert-token-to-collection\", async (req, res) => {\r\n  try {\r\n    const { body } = req;\r\n    const collection = await models.collectionModel\r\n      .find({ name: body.name })\r\n      .lean()\r\n      .exec();\r\n    if (collection) {\r\n      let tokenUpdate=models.collectionModel.findOneAndUpdate({name: body.name},{\r\n        $push: {'tokens': parseInt(body.token)}\r\n      })\r\n      tokenUpdate.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Successfully token Added!\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(200).json({message:\"Document not found!\"})\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n});\r\n\r\nroutes\r\n  .route(\"/view-and-like\")\r\n  .get(async (req, res) => {\r\n    try {\r\n      const { tokenAddr, tokenId } = req.query;\r\n      const obj = await models.viewAndLikeModel.findOne({ tokenAddr: { '$regex' : '^'+req.query.tokenAddr+'$', \"$options\": \"i\" }, tokenId:req.query.tokenId }).lean().exec();\r\n\r\n      if (obj) {\r\n        res.status(200).json({ ...obj });\r\n      } else {\r\n        res.status(200).json({\r\n          views: 0,\r\n          likes: 0,\r\n          tokenAddr,\r\n          tokenId,\r\n          likedAccounts: [],\r\n          viewedAddresses: [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  })\r\n  .post(async (req, res) => {\r\n    try {\r\n      const { body } = req;\r\n      console.log({ body });\r\n      const obj = await models.viewAndLikeModel.findOne({\r\n        tokenAddr: body.tokenAddr,\r\n        tokenId: body.tokenId,\r\n      });\r\n      console.log({ obj });\r\n      if (obj) {\r\n        // update\r\n\r\n        //VIEWS ARE NOT EQUAL ? THEN CHECK IF ADDRESS IS PRESENT IN ARRAY\r\n        if (\r\n          (parseInt(body.views) !== parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0) ||\r\n          (parseInt(body.views) === parseInt(obj.views) &&\r\n            parseInt(body.views) !== 0)\r\n        ) {\r\n          if (obj.viewedAddresses?.includes(body.address)) {\r\n            return res.status(200).json({message:\"Already viewed\",error:true});\r\n          } else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { viewedAddresses: [...obj.viewedAddresses, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n\r\n        if (\r\n          (parseInt(body.likes) !== parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0) ||\r\n          (parseInt(body.likes) === parseInt(obj.likes) &&\r\n            parseInt(body.likes) !== 0)\r\n        ) {\r\n          if (obj.likedAccounts?.includes(body.address)) {\r\n            return res.status(200).json({message:\"Already Liked\",error:true});\r\n          }\r\n          //else if\r\n          else {\r\n            await models.viewAndLikeModel.findOneAndUpdate(\r\n              { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n              { likedAccounts: [...obj.likedAccounts, body.address] },\r\n              { new: true }\r\n            );\r\n          }\r\n        }\r\n        const newUpdatedInfo = await models.viewAndLikeModel.findOneAndUpdate(\r\n          { tokenAddr: body.tokenAddr, tokenId: body.tokenId },\r\n          {\r\n            views: obj.views + body.views,\r\n            likes: obj.likes + body.likes,\r\n          },\r\n          { new: true }\r\n        );\r\n        res.status(200).json(newUpdatedInfo);\r\n      } else {\r\n        await models.viewAndLikeModel.create({\r\n          tokenAddr: body.tokenAddr,\r\n          tokenId: body.tokenId,\r\n          views: body.views > 0 ? 1 : 0,\r\n          likes: body.likes > 0 ? 1 : 0,\r\n          viewedAddresses: body.views > 0 ? [body.address?.toLowerCase()] : [],\r\n          likedAccounts: body.likes > 0 ? [body.address?.toLowerCase()] : [],\r\n        });\r\n      }\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n    }\r\n  });\r\n\r\nroutes.get(\"/views_and_likes\",(req, res) => {\r\n    var viewAndLike=models.viewAndLikeModel.find();\r\n    viewAndLike.exec()\r\n    .then((data)=>{\r\n      res.send(data);\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.message}))\r\n})\r\n\r\nroutes.post(\"/usersviews_and_userslikes\",(req, res) => {\r\n  let likedNft =[];\r\n    var like=models.viewAndLikeModel.find({likedAccounts:req.body.userAddress});\r\n    like.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          likedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({likedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/update-notification-bar\",async(req, res) => {\r\n  try{\r\n    let noti=await models.notificationmodel.findOne().lean().exec();\r\n    await models.notificationmodel.findOneAndUpdate({_id:noti._id},req.body).exec();\r\n    return res.status(200).json(\"Updated Successfully\")\r\n  } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/get-notification-bar\",apiAuth.userAuth,async(req, res) => {\r\n  try{\r\n    let noti=await models.notificationmodel.findOne().lean().exec();\r\n    return res.status(200).json(noti)\r\n  } catch (error) {\r\n      res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/usersviews\",(req, res) => {\r\n  let viewedNft =[];\r\n    var view=models.viewAndLikeModel.find({viewedAddresses:req.body.userAddress});\r\n    view.exec((err,data)=>{\r\n      data.forEach(function(token){\r\n        let nftdata=models.nftControllerModel.findOne({tokenId:token.tokenId,tokenAddr: { '$regex' : '^'+token.tokenAddr+'$', \"$options\": \"i\" }});\r\n        nftdata.exec((err,nft)=>{\r\n          if (err) throw err\r\n          viewedNft.push(nft)\r\n        })\r\n      })\r\n      setTimeout(()=>res.status(200).json({viewedNft}),3000);\r\n    })\r\n})\r\n\r\nroutes.post(\"/users_follow\",(req, res) => {\r\n  let follower=models.userModel.findOneAndUpdate({address:req.body.follower},{\r\n    $push: {'follower': req.body.following}\r\n  })\r\n  follower.exec((err)=>{\r\n    if(err) throw err;\r\n    let following=models.userModel.findOneAndUpdate({address:req.body.following},{\r\n      $push: {'following': req.body.follower}\r\n    })\r\n    following.exec((err)=>{\r\n      if(err) throw err;\r\n      res.send(\"success\")\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/get-followers\",(req, res) => {\r\n  let followers=[];\r\n    var user=models.userModel.findOne({address:{'$regex' : '^'+req.body.userAddress+'$', \"$options\": \"i\"}});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.follower[0]!==undefined && data.follower[0]!==null){\r\n         data.follower.map(function(address){\r\n          let userdata=models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}});\r\n          userdata.exec((err,fdata)=>{\r\n            if (err) throw err\r\n            if(fdata!==undefined && fdata!==null){\r\n              followers.push(fdata)\r\n            }\r\n          })\r\n        })\r\n          setTimeout(()=>res.status(200).json({followers}),3000);\r\n          }\r\n        else{\r\n          res.status(400).json({msg:\"No followers\"})\r\n        }\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n    })\r\n})\r\n\r\nroutes.post(\"/get-following\",(req, res) => {\r\n  let followings=[];\r\n    var user=models.userModel.findOne({address:{'$regex' : '^'+req.body.userAddress+'$', \"$options\": \"i\"}});\r\n    user.exec((err,data)=>{\r\n      if(err) throw err;\r\n      if(data!==undefined && data!==null){\r\n        if(data.following[0]!==undefined && data.following[0]!==null){\r\n          data.following.map(function(address){\r\n            let userdata=models.userModel.findOne({address:{'$regex' : '^'+address+'$', \"$options\": \"i\"}});\r\n            userdata.exec((err,fdata)=>{\r\n              if (err) throw err\r\n              if(fdata!==undefined && fdata!==null){\r\n                followings.push(fdata)\r\n              }\r\n            })\r\n          })\r\n        setTimeout(()=>res.status(200).json({followings}),3000);\r\n      }\r\n      else{\r\n        res.status(400).json({msg:\"No followings\"})\r\n      }\r\n    }\r\n      else{\r\n        res.status(400).json({msg:\"No Data\"})\r\n      }\r\n  })\r\n})\r\n\r\nroutes.post(\"/admin-register\",async(req, res) => {\r\n  try{\r\n    if(!req.body.walletAddress || !req.body.name || !req.body.email){\r\n      return res.status(500).json(\"Parameters are wrong\");\r\n    }\r\n    else{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        res.status(500).json(\"Already Admin\");\r\n      }\r\n      else{\r\n        let createAdmin=new models.adminRegisterModel({\r\n          walletAddress: req.body.walletAddress,\r\n          name:req.body.name,\r\n          email:req.body.email\r\n        })\r\n        createAdmin.save(function(){\r\n          res.status(200).json(\"Admin registerd Succcesfully\");\r\n        });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-update\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        await models.adminRegisterModel.findOneAndUpdate({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}},req.body).exec();\r\n        res.status(200).json(\"Updated succesfully\");\r\n      }\r\n      else{\r\n        res.status(500).json(\"Wallet Address is necessary to update Admin\");\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-delete\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n      if(adminData){\r\n        await models.adminRegisterModel.findOneAndDelete({walletAddress:{'$regex' : '^'+req.body.walletAddress+'$', \"$options\": \"i\"}}).exec();\r\n        res.status(200).json(\"Deleted succesfully\");\r\n      }\r\n      else{\r\n        res.status(500).json(\"Wallet Adddress is necessary to delete Admin\");\r\n      }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/admin-all\",async(req, res) => {\r\n  try{\r\n      let adminData=await models.adminRegisterModel.find().lean().exec();\r\n      res.status(200).json(adminData);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/admin-login\",async(req, res) => {\r\n  if(req.body.address){\r\n    let adminData=await models.adminRegisterModel.findOne({walletAddress:{'$regex' : '^'+req.body.address+'$', \"$options\": \"i\"}}).exec();\r\n    if(adminData){\r\n      const jwtData = {\r\n        expiresIn:\"2 hours\" \r\n    };\r\n      const token=jwt.sign({walletAddress:req.body.address},secret,jwtData)\r\n      res.status(200).json(token)\r\n    }\r\n    else{\r\n      res.status(400).send(\"Wallet Not Found\")\r\n    }\r\n  }\r\n  else{\r\n    res.status(400).send(\"Wallet Not Found\")\r\n  }\r\n})\r\n\r\nroutes.post(\"/single-nft\",(req, res) => {\r\n  if(req.body.tokenId == undefined || req.body.tokenAddr==undefined){\r\n    res.status(500).json(\"Payload are wrong\")\r\n  }\r\n  else{\r\n    var nftdata=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});;\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.post(\"/nft-wrt-owner\",(req, res) => {\r\n  if(req.body.owner == undefined){\r\n    res.status(500).json(\"Parameters are wrong\")\r\n  }\r\n  else{\r\n    var nftdata=models.nftControllerModel.find({owner: { '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" }});\r\n    nftdata.exec()\r\n    .then((data)=>{\r\n      res.status(200).json(data)\r\n    })\r\n    .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-chainId\",async (req, res) => {\r\n  try{\r\n    if( req.body.chainId.decimal == undefined || req.body.chainId.hexa==undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let decimal=parseInt(req.body.chainId.decimal);\r\n      let hexa=String(req.body.chainId.hexa);\r\n      let Nft = models.nftControllerModel.find({chainId:{decimal:decimal,hexa:hexa}});\r\n      Nft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        res.status(200).json(data)\r\n      })\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-tokenaddr\",async (req, res) => {\r\n  try{\r\n    if(req.body.tokenIds == undefined || req.body.tokenAddr == undefined || req.body.tokenIds.length < 1 || req.body.tokenIds.length == undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let data=[];\r\n      let tokenIds=req.body.tokenIds;\r\n      let i=0;\r\n      findNft(tokenIds[i]);\r\n      async function findNft(id){\r\n        let nft =await models.nftControllerModel.findOne({tokenId: id , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }}).lean().exec();\r\n        if(nft){\r\n          data.push(nft)\r\n        }\r\n        if(i!==tokenIds.length-1){\r\n          i++;\r\n          await findNft(tokenIds[i]);\r\n        }\r\n        else{\r\n          return res.status(200).json(data);\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.post(\"/nfts-wrt-tokenaddr-and-id\",async (req, res) => {\r\n  try{\r\n    if(req.body.nftToken == undefined || req.body.nftToken.length < 1 || req.body.nftToken.length == undefined){\r\n      res.status(500).json(\"Payload are wrong\")\r\n    }\r\n    else{\r\n      let data=[];\r\n      let tokens=req.body.nftToken;\r\n      let i=0;\r\n      findNft(tokens[i]);\r\n      async function findNft(token){\r\n        if(!Object.keys(token).length<2 && token.id && token.address){\r\n          let nft =await models.nftControllerModel.findOne({tokenId: token.id , tokenAddr: { '$regex' : '^'+token.address+'$', \"$options\": \"i\" }}).lean().exec();\r\n          if(nft){\r\n            data.push(nft)\r\n          }\r\n        }\r\n        if(i!==tokens.length-1){\r\n          i++;\r\n          await findNft(tokens[i]);\r\n        }\r\n        else{\r\n          return res.status(200).json(data);\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n  }\r\n})\r\n\r\nroutes.get(\"/nft-collector\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find();\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    res.status(200).json(data)\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/nft-collector\",(req, res) => {\r\n  try{\r\n    if(req.body.tokenId && req.body.tokenAddr){\r\n    let filterData=models.nftControllerModel.findOne({tokenId: String(req.body.tokenId) , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==null){\r\n          let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: String(req.body.tokenId),tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n            price: req.body.price,\r\n            owner:req.body.ownerOf,\r\n            selectedCat:req.body.selectedCat,\r\n            isOnSell:req.body.isOnSell\r\n          })\r\n          updateNft.exec((err)=>{\r\n            if(err) throw err;\r\n            res.status(200).json({message:\"Updated Success\"})\r\n          })\r\n        }\r\n        else{\r\n          let createNft=new models.nftControllerModel({\r\n            tokenAddr: req.body.tokenAddr,\r\n            tokenId: req.body.tokenId,\r\n            price: req.body.price,\r\n            owner:req.body.ownerOf,\r\n            metadata: req.body.metadata,\r\n            selectedCat:req.body.selectedCat,\r\n            tokenUri:req.body.tokenUri,\r\n            chainId:req.body.chainId,\r\n            relatedCollectionId:req.body.relatedCollectionId,\r\n            status:\"pending\"\r\n          })\r\n          createNft.save(function(){\r\n            res.status(200).json({message:\"Success\"})\r\n        });\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      res.status(500).json(\"Token Id or TokenAddress is not Defined\");\r\n    }\r\n  } catch (error) {\r\n  res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.post(\"/external-nft\",(req, res) => {\r\n  try{\r\n    let query;\r\n    if(parseInt(req.body.chainId)==56 || String(req.body.chainId)==\"0x38\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        $or:[{\"chainId.decimal\":parseInt(req.body.chainId)},{\"decimal.hexa\":String(req.body.chainId)}],\r\n        $and:[\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xB2D4C7AfFa1B01fa33C82A8aC63075BD366df4b0\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x5b31d474dcadc1c2a1dfc7d4562b2268b0feea43\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xA84ABA462A3dc12A5874c8D0D61d757256C905a5\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x69903cd9dBBEC1bcaB81E1ffe003260e9e487Ca4\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xe9e7cea3dedca5984780bafc599bd69add087d56\"+'$' , '$option':i}}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==97 || String(req.body.chainId)==\"0x61\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        $or:[{\"chainId.decimal\":parseInt(req.body.chainId)},{\"decimal.hexa\":String(req.body.chainId)}],\r\n        $and:[\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x69536bdf4B18499181EB386B0E4019a28C4Fb096\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xA4fb840986B10aC44aA893793cfe755c81c3740D\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xBec98ca675EE0099E7eaF0d626a38abAE42Ef24D\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x51c19275686d84c1553f3edd2945dba6ec0c7de4\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x8301f2213c0eed49a7e28ae4c3e91722919b8b47\"+'$' , '$option':i}}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==4 || String(req.body.chainId)==\"0x4\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        $or:[{\"chainId.decimal\":parseInt(req.body.chainId)},{\"decimal.hexa\":String(req.body.chainId)}],\r\n        $and:[\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0xDB753bacDFb788c4d70CEc237F898db21017B11d\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x848655Ccc2E571cA9470954BF08C4Eab3436830B\"+'$' , '$option':i}}},\r\n          {tokenAddr: {$ne:{ '$regex' : '^'+\"0x8A36a5395CAa70da6545f030BFB659Fc8e820A59\"+'$' , '$option':i}}}\r\n        ],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==1 || String(req.body.chainId)==\"0x1\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        chainId:{decimal:1,hexa:\"0x1\"},\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==137 || String(req.body.chainId)==\"0x89\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        $or:[{\"chainId.decimal\":parseInt(req.body.chainId)},{\"decimal.hexa\":String(req.body.chainId)}],\r\n      }\r\n    }\r\n    else if(parseInt(req.body.chainId)==80001 || String(req.body.chainId)==\"0x13881\"){\r\n      query={\r\n        owner:{ '$regex' : '^'+req.body.owner+'$', \"$options\": \"i\" },\r\n        $or:[{\"chainId.decimal\":parseInt(req.body.chainId)},{\"decimal.hexa\":String(req.body.chainId)}],\r\n      }\r\n    }\r\n    let externalNft= models.nftControllerModel.find(query)\r\n    externalNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(200).json(data)\r\n    })\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/insert-multiple-nft\",async (req, res) => {\r\n  try{\r\n    if(req.body.nfts.length<1){\r\n      res.status(400).json({message:\"NFT array not defined\"})\r\n    }\r\n    else{\r\n      let nfts=req.body.nfts;\r\n      let i=0;\r\n      storeNFT(0);\r\n      async function storeNFT(i){\r\n        let check = await models.nftControllerModel.findOne({tokenId: nfts[i].tokenId , tokenAddr: { '$regex' : '^'+nfts[i].tokenAddr+'$', \"$options\": \"i\" }}).exec();\r\n        if(check==null){\r\n           await new models.nftControllerModel({\r\n              tokenAddr: nfts[i].tokenAddr,\r\n              tokenId: nfts[i].tokenId,\r\n              price: nfts[i].price,\r\n              owner:nfts[i].ownerOf,\r\n              metadata: nfts[i].metadata,\r\n              selectedCat:nfts[i].selectedCat,\r\n              tokenUri:nfts[i].tokenUri,\r\n              chainId:nfts[i].chainId,\r\n              relatedCollectionId:nfts[i].relatedCollectionId,\r\n              status:\"pending\"\r\n          }).save();\r\n        }\r\n        if(i==nfts.length-1){\r\n          res.status(200).json({message:\"Successfully stored\"})\r\n        }\r\n        else{\r\n          i++;\r\n          await storeNFT(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  catch(err) {\r\n    console.error(err);\r\n  }\r\n})\r\n\r\nroutes.post(\"/search-nft\",(req, res) => {\r\n  if (req.body.name !==undefined && req.body.name !== null && req.body.name !== false){\r\n    let decimal=parseInt(req.body.chainId);\r\n    let limitedNft=models.nftControllerModel.find({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'},\"chainId.decimal\":decimal}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({\"metadata.name\": { $regex:'.*' + req.body.name + \".*\", $options: 'i'},\"chainId.decimal\":decimal}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(500).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n  }\r\n  else{\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n})\r\n\r\nroutes.post(\"/update-nft-status\",auth,(req, res) => {\r\n  let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n  filterData.exec((err,data)=>{\r\n    if (err) throw err;\r\n    if(data!==undefined && data!==null){\r\n      let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n        status: req.body.status,\r\n      })\r\n      updateNft.exec((err)=>{\r\n        if(err) throw err;\r\n        res.status(200).json({message:\"Status Updated Successfully\"})\r\n      })\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"Nft not found\"})\r\n    }\r\n})\r\n\r\n})\r\n\r\nroutes.post(\"/most-liked-nft\",async (req, res) => {\r\n  let limit=parseInt(req.body.size);\r\n  let page=parseInt(req.body.page);\r\n  let decimal=parseInt(req.body.chainId);\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":-1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (page-1)*limit},\r\n          { $limit : limit }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=0;\r\n  if(filterData){\r\n    count=filterData[0].Total[0].count;\r\n  }\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({mostLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/least-liked-nft\",async (req, res) => {\r\n  let limit=parseInt(req.body.size);\r\n  let page=parseInt(req.body.page);\r\n  let decimal=parseInt(req.body.chainId);\r\n  let filterData=await models.nftControllerModel.aggregate([\r\n    {$match : {isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}},\r\n    {$lookup: {\r\n      from: \"viewandlikes\", // collection to join\r\n      let: {tokenAddr: \"$tokenAddr\", tokenId: \"$tokenId\"},\r\n\t\t\t\t\tpipeline: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$match:\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t$expr:\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t$and:\r\n\t\t\t\t\t\t\t\t\t\t\t\t[{$eq: [\"$tokenAddr\", \"$$tokenAddr\"]},{$eq: [\"$tokenId\", \"$$tokenId\"]} ]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n      as: \"likes\"// output array field\r\n      }},\r\n      { $unwind : \"$likes\" },\r\n      {$addFields: {\"likes\": \"$likes.likes\"}},\r\n      { \"$sort\": {\"likes\":1} },\r\n      {$facet: {\r\n        data: [\r\n          { $skip : (page-1)*limit},\r\n          { $limit : limit }\r\n        ],\r\n        Total:[\r\n          { $group:{ _id :null ,count:{$sum:1}}}\r\n        ]\r\n      }}\r\n  ]).exec();\r\n  let count=0;\r\n  if(filterData){\r\n    count=filterData[0].Total[0].count;\r\n  }\r\n  let totalPage=Math.ceil(count/req.body.size);\r\n  res.status(200).json({leastLikedNft:filterData[0].data,totalPage:totalPage});\r\n})\r\n\r\nroutes.post(\"/price-range-nft\",(req, res) => {\r\n  let decimal=parseInt(req.body.chainId);\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal,price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n  models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal,price:{$gt:req.body.startPrice,$lt:req.body.endPrice}}, function(err, count) {\r\n    let totalPage=Math.ceil(count/req.body.size);  \r\n    filterData.exec(async(err,data)=>{\r\n      if (err) throw err;\r\n      if(data[0]==undefined || data[0]==null){\r\n        res.status(200).json({message:\"No NFT found in this Price range\",totalPage:totalPage,errs:true});\r\n      }\r\n      else{\r\n        res.status(200).json({nft:data,totalPage:totalPage});\r\n      }\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/oldest-nft\",(req, res) => {\r\n  try{\r\n    let decimal=parseInt(req.body.chainId);\r\n    let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}).sort({$natural:1}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size));\r\n    models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}, function(err, count) {\r\n      let totalPage=Math.ceil(count/parseInt(req.body.size));  \r\n      filterData.exec(async(err,data)=>{\r\n          if (err) throw err;\r\n          if(data[0]==undefined || data[0]==null){\r\n            res.status(200).json({message:\"No NFT found\",errs:true});\r\n          }\r\n          else{\r\n            res.status(200).json({nft:data,totalPage:totalPage});\r\n          }\r\n      })\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.post(\"/newest-nft\",(req, res) => {\r\n  try{\r\n  let decimal=parseInt(req.body.chainId);\r\n  let filterData=models.nftControllerModel.find({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}).sort({$natural:-1}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size));\r\n    models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}, function(err, count) {\r\n      let totalPage=Math.ceil(count/parseInt(req.body.size));  \r\n      filterData.exec(async(err,data)=>{\r\n          if (err) throw err;\r\n          if(data[0]==undefined || data[0]==null){\r\n            res.status(200).json({message:\"No NFT found\",errs:true});\r\n          }\r\n          else{\r\n            res.status(200).json({nft:data,totalPage:totalPage});\r\n          }\r\n      })\r\n    })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.get(\"/count-nft\",(req, res) => {\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    res.status(202).json(count)\r\n  })\r\n})\r\n\r\nroutes.post(\"/nft-pagination\",(req, res) => {\r\n  let limitedNft=models.nftControllerModel.find({}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size));\r\n  models.nftControllerModel.countDocuments({}, function(err, count) {\r\n    let totalPage=Math.ceil(count/parseInt(req.body.size));\r\n    limitedNft.exec((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(202).json({nft:data,totalPage:totalPage})\r\n    })\r\n  })\r\n})\r\n\r\nroutes.post(\"/collection-pagination\",(req, res) => {\r\n  try{\r\n  let limitedCollection=models.collectionModel.find({category:req.body.category}).skip((parseInt(req.body.page)-1)*parseInt(req.body.size)).limit(parseInt(req.body.size)).lean();\r\n  models.collectionModel.countDocuments({category:req.body.category}, function(err, count) {\r\n    let totalPage=Math.ceil(count/parseInt(req.body.size));\r\n    limitedCollection.exec((err,data)=>{\r\n      if(err) throw err;\r\n      res.status(202).json({collection:data,totalPage:totalPage})\r\n    })\r\n  })\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Some thing went wrong\" , error:error.message});\r\n}\r\n})\r\n\r\nroutes.get(\"/feature-nft\",(req, res) => {\r\n  var nftdata=models.nftControllerModel.find({featured: true});\r\n  nftdata.exec()\r\n  .then((data)=>{\r\n    if(data[0]!==undefined && data[0]!==null){\r\n      res.status(200).json(data)\r\n    }\r\n    else{\r\n      res.status(400).json({message:\"No any Nft is featured\"})\r\n    }\r\n  })\r\n  .catch((err)=>res.status(500).json({ message: error.toString()}))\r\n})\r\n\r\nroutes.post(\"/feature-nft\",auth,(req, res) => {\r\n  models.nftControllerModel.countDocuments({featured: true}, function(err, documents) {\r\n    if(documents==10 && req.body.isFeatured==true){\r\n      res.status(202).json({message:\"Feature nft limit exceed\"})\r\n    }\r\n    else if(documents==3 && req.body.isFeatured==false){\r\n      res.status(202).json({message:\"Minimum 3 should be featured\"})\r\n    }\r\n    else{\r\n      let filterData=models.nftControllerModel.findOne({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }});\r\n      filterData.exec((err,data)=>{\r\n        if (err) throw err;\r\n        if(data!==undefined && data!==null){\r\n          if(data.status==\"active\"){\r\n            let updateNft= models.nftControllerModel.findOneAndUpdate({tokenId: req.body.tokenId , tokenAddr: { '$regex' : '^'+req.body.tokenAddr+'$', \"$options\": \"i\" }},{\r\n              featured: req.body.isFeatured,\r\n            })\r\n            updateNft.exec((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Nft Updated Successfully\"})\r\n            })\r\n        }\r\n        else{\r\n          res.status(400).json({message:\"Nft not activated\"})\r\n        }\r\n      }\r\n        else{\r\n          res.status(400).json({message:\"Nft not found\"})\r\n        }\r\n      })\r\n    }\r\n  })\r\n})\r\n\r\nroutes.post(\"/count-nft-category-vise\",(req, res) => {\r\n  if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n    res.status(500).json({message:\"Data is not defined\"})\r\n  }\r\n  else if(req.body.category==\"All NFTs\"){\r\n    models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n  else{\r\n    models.nftControllerModel.countDocuments({selectedCat:req.body.category}, function(err, count) {\r\n      res.status(202).json(count)\r\n    })\r\n  }\r\n})\r\n\r\nroutes.post(\"/nft-category-vise\",(req, res) => {\r\n  if(req.body.isMarketPlace){\r\n    if (req.body.category ==undefined && req.body.category == null && req.body.category == false){\r\n      res.status(200).json({message:\"Data is not defined\"})\r\n    }\r\n    else if(req.body.category==\"All NFTs\"){\r\n      let decimal=parseInt(req.body.chainId);\r\n        let limitedNft=models.nftControllerModel.find({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}, function(err, count) {\r\n        let totalPage=Math.ceil(count/req.body.size);\r\n        limitedNft.exec((err,data)=>{\r\n          if(err) throw err;\r\n          if(data[0]!==undefined && data[0]!==null){\r\n            res.status(202).json({nft:data,totalPage:totalPage})\r\n          }\r\n          else{\r\n            res.status(200).json({message:\"No NFT found\"})\r\n          }\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      let decimal=parseInt(req.body.chainId);\r\n        let limitedNft=models.nftControllerModel.find({selectedCat:req.body.category,isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n        models.nftControllerModel.countDocuments({selectedCat:req.body.category,isOnSell:true,status:\"active\",\"chainId.decimal\":decimal}, function(err, count) {\r\n          if (err) throw err;\r\n          if(count == undefined || count == null || count == false || count == 0){\r\n            res.status(200).json({message:\"No NFT found for this Category\"})\r\n          }\r\n          else{\r\n            let totalPage=Math.ceil(count/req.body.size);\r\n            limitedNft.exec((err,data)=>{\r\n              if(err) throw err;\r\n              if(data[0]!==undefined && data[0]!==null){\r\n                res.status(202).json({nft:data,totalPage:totalPage})\r\n              }\r\n              else{\r\n                res.status(200).json({message:\"No NFT found for this Category\"})\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  else{\r\n    let limitedNft=models.nftControllerModel.find({}).skip((req.body.page-1)*req.body.size).limit(req.body.size);\r\n      models.nftControllerModel.countDocuments({}, function(err, count) {\r\n      let totalPage=Math.ceil(count/req.body.size);\r\n      limitedNft.exec((err,data)=>{\r\n        if(err) throw err;\r\n        if(data[0]!==undefined && data[0]!==null){\r\n          res.status(202).json({nft:data,totalPage:totalPage})\r\n        }\r\n        else{\r\n          res.status(200).json({message:\"No NFT found\"})\r\n        }\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nconst filePath = path.join(__dirname,\"../\",\"../public/sliderimage/\");\r\n// for file upload\r\nvar Storage=multer.diskStorage({\r\n  destination:filePath,\r\n  filename:(req,file,cb)=>{\r\n    cb(null,uuid.v4()+path.extname(file.originalname))\r\n  }\r\n})\r\n\r\nvar upload=multer({\r\n  storage:Storage\r\n}).single('pic');\r\n \r\n\r\nroutes.post(\"/add_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(\"400\").json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(\"400\").json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n    models.uploadSliderModel.countDocuments({}, function(err, documents) {\r\n      if(documents==10){\r\n        res.status(202).json({msg:\"slider limit exceed\"})\r\n      }\r\n      else{\r\n      fs.readFile(req.file.path, (err, data) => {\r\n        if (err) throw err;\r\n        const params = {\r\n            Bucket: 'closedsea', // pass your bucket name\r\n            Key: req.file.filename, // file will be saved\r\n            ACL: \"public-read\",\r\n            ContentType: req.file.mimetype,\r\n            Body: data\r\n        };\r\n        s3.upload(params, function(s3Err, data) {\r\n            if (s3Err) throw s3Err\r\n            let uploadslider= new models.uploadSliderModel({\r\n              link: req.body.link,\r\n              imageUrl:data.Location\r\n            })\r\n            uploadslider.save((err)=>{\r\n              if(err) throw err;\r\n              res.status(200).json({message:\"Success\"})\r\n            })\r\n        });\r\n      });\r\n    }\r\n});\r\n}\r\n});\r\n\r\nroutes.post(\"/update_slider\",auth,upload,(req,res)=>{\r\n  if(req.file == undefined){\r\n    res.status(400).json({message:\"Image is Required\"})\r\n  }\r\n  else if(req.body.link == undefined){\r\n    res.status(400).json({message:\"Link is Required\"})\r\n  }\r\n  else{\r\n  console.log(req.file);\r\n  fs.readFile(req.file.path, (err, data) => {\r\n    if (err) throw err;\r\n    const params = {\r\n        Bucket: 'closedsea', // pass your bucket name\r\n        Key: req.file.filename, // file will be saved as testBucket/contacts.csv\r\n        ACL: \"public-read\",\r\n        ContentType: req.file.mimetype,\r\n        Body: data\r\n    };\r\n    s3.upload(params, function(s3Err, data) {\r\n        if (s3Err) throw s3Err\r\n        let uploadslider= models.uploadSliderModel.findOneAndUpdate({_id:req.body.id},{\r\n          link: req.body.link,\r\n          imageUrl:data.Location\r\n        })\r\n        uploadslider.exec((err)=>{\r\n          if(err) throw err;\r\n          res.status(200).json({message:\"Success\"})\r\n        })\r\n    });\r\n });\r\n}\r\n});\r\n\r\nroutes.delete(\"/delete_slider/:id\",auth,upload,(req,res)=>{\r\n  let url=req.query.q.split(\".com/\")[1] ;\r\n  var deleteSlider= models.uploadSliderModel.findOneAndDelete({_id:req.params.id});\r\n  s3.deleteObject({\r\n    Bucket: \"closedsea\",\r\n    Key: url\r\n  },function (err,data){\r\n    deleteSlider.exec(function(err){\r\n      if(err) throw err;\r\n      res.status(200).json({message:\"Successfully deleted\"})\r\n  })\r\n  })\r\n});\r\n\r\nroutes.get(\"/getsliders\",(req,res)=>{\r\n  let filterData=models.uploadSliderModel.find();\r\n  filterData.exec(function(err,data){\r\n    if(err) throw err;\r\n    if(data){\r\n      res.status(200).json(data)\r\n    }\r\n  });\r\n})\r\n\r\nroutes.route(\"/search\").get(async (req, res) => {\r\n  try {\r\n    const { name } = req.query;\r\n    console.log(name);\r\n    if(name){\r\n    const collections = await models.collectionModel.find({ name: { $regex:'^' + name, $options: 'i'} });\r\n    const users = await models.userModel.find({ userName: { $regex:'^' + name, $options: 'i'} });\r\n    \r\n    res.status(200).json({\r\n      message: \"success\",\r\n\r\n      data: {\r\n        collections,\r\n        users,\r\n      },\r\n    });}\r\n    else{\r\n      res.status(200).json({\r\n        message: \"success\",\r\n  \r\n        data: {\r\n          collections:\"\",\r\n          users:\"\"\r\n        }\r\n    })\r\n  }\r\n  } catch (error) {\r\n    res.status(500).json({ message: error.toString() });\r\n  }\r\n});\r\n\r\nmodule.exports = routes;"],"file":"index.js"}