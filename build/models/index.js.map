{"version":3,"sources":["../../src/models/index.js"],"names":["userSchema","mongoose","Schema","address","type","String","required","unique","userName","description","avatar","background","twitter","facebook","instagram","follower","Array","following","plugin","timeStamp","collectionSchema","name","owner","nftAddress","externalUrl","tokens","viewAndLikeSchema","tokenAddr","tokenId","views","Number","likes","viewedAddresses","likedAccounts","nftControllerSchema","price","metadata","imageUrl","externalLink","tokenUri","selectedCat","status","adminRegiterSchema","walletAddress","uploadSliderSchema","slider","link","userModel","model","collectionModel","viewAndLikeModel","nftControllerModel","adminRegisterModel","uploadSliderModel","models"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\r\n// mongoose.connect('mongodb://localhost:27017/default', {useNewUrlParser: true, useUnifiedTopology: true});\r\nimport { timeStamp } from '~/utils/helpers';\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  address: {\r\n    type: String,\r\n    required: true,\r\n    unique: true\r\n  },\r\n  userName: {\r\n    type: String,\r\n  },\r\n  description: {\r\n    type: String\r\n  },\r\n  avatar: {\r\n    type: String\r\n  },\r\n  background: {\r\n    type: String\r\n  },\r\n  twitter: {\r\n    type: String\r\n  },\r\n  facebook: {\r\n    type: String\r\n  },\r\n  instagram: {\r\n    type: String\r\n  },\r\n  \r\n  follower:Array,\r\n  following:Array\r\n});\r\n\r\nuserSchema.plugin(timeStamp);\r\n\r\nconst collectionSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  avatar: {\r\n    type: String,\r\n  },\r\n  background: {\r\n    type: String\r\n  },\r\n  owner: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  nftAddress: {\r\n    type: String\r\n  },\r\n  description: {\r\n    type: String\r\n  },\r\n  externalUrl: {\r\n    type: String\r\n  },\r\n  tokens: {\r\n    type: Array\r\n  }\r\n});\r\n\r\nconst viewAndLikeSchema = new mongoose.Schema({\r\n  tokenAddr: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  tokenId: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  views: {\r\n    type: Number\r\n  },\r\n  likes: {\r\n    type: Number\r\n  },\r\n  viewedAddresses: [String],\r\n  likedAccounts: {\r\n    type: [String]\r\n  }\r\n});\r\n\r\nconst nftControllerSchema = new mongoose.Schema({\r\n  tokenAddr: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  tokenId: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  price: {\r\n    type: String\r\n  },\r\n  metadata: {\r\n    imageUrl:String,\r\n    name:String,\r\n    description:String,\r\n    externalLink:String\r\n  },\r\n  tokenUri:String,\r\n  selectedCat:String,\r\n  status:String\r\n});\r\n\r\nconst adminRegiterSchema = new mongoose.Schema({\r\n  walletAddress: {\r\n    type: String,\r\n    required: true\r\n  }\r\n});\r\n\r\nconst uploadSliderSchema = new mongoose.Schema({\r\n  slider:String,\r\n  imageUrl: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  link:String\r\n});\r\n\r\nconst userModel = mongoose.model('user', userSchema);\r\nconst collectionModel = mongoose.model('collection', collectionSchema);\r\nconst viewAndLikeModel = mongoose.model('viewAndLike', viewAndLikeSchema);\r\nconst nftControllerModel = mongoose.model('nftController', nftControllerSchema);\r\nconst adminRegisterModel = mongoose.model('Admins', adminRegiterSchema);\r\nconst uploadSliderModel = mongoose.model('slider', uploadSliderSchema);\r\n\r\nconst models = {\r\n  userModel,\r\n  collectionModel,\r\n  viewAndLikeModel,\r\n  nftControllerModel,\r\n  adminRegisterModel,\r\n  uploadSliderModel\r\n};\r\n\r\nexport default models;\r\n"],"file":"index.js"}