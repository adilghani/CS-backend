{"version":3,"sources":["../../src/models/index.js"],"names":["userSchema","mongoose","Schema","address","type","String","required","unique","userName","description","avatar","background","twitter","facebook","instagram","plugin","timeStamp","collectionSchema","name","owner","nftAddress","externalUrl","tokens","Array","viewAndLikeSchema","tokenAddr","tokenId","views","Number","likes","viewedAddresses","likedAccounts","nftControllerSchema","price","metadata","imageUrl","externalLink","tokenUri","adminRegiterSchema","walletAddress","uploadSliderSchema","slider","link","userModel","model","collectionModel","viewAndLikeModel","nftControllerModel","adminRegisterModel","uploadSliderModel","models"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\n// mongoose.connect('mongodb://localhost:27017/default', {useNewUrlParser: true, useUnifiedTopology: true});\nimport { timeStamp } from '~/utils/helpers';\n\nconst userSchema = new mongoose.Schema({\n  address: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  userName: {\n    type: String,\n  },\n  description: {\n    type: String\n  },\n  avatar: {\n    type: String\n  },\n  background: {\n    type: String\n  },\n  twitter: {\n    type: String\n  },\n  facebook: {\n    type: String\n  },\n  instagram: {\n    type: String\n  }\n});\n\nuserSchema.plugin(timeStamp);\n\nconst collectionSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  avatar: {\n    type: String,\n  },\n  background: {\n    type: String\n  },\n  owner: {\n    type: String,\n    required: true\n  },\n  nftAddress: {\n    type: String\n  },\n  description: {\n    type: String\n  },\n  externalUrl: {\n    type: String\n  },\n  tokens: {\n    type: Array\n  }\n});\n\nconst viewAndLikeSchema = new mongoose.Schema({\n  tokenAddr: {\n    type: String,\n    required: true\n  },\n  tokenId: {\n    type: String,\n    required: true\n  },\n  views: {\n    type: Number\n  },\n  likes: {\n    type: Number\n  },\n  viewedAddresses: [String],\n  likedAccounts: {\n    type: [String]\n  }\n});\n\nconst nftControllerSchema = new mongoose.Schema({\n  tokenAddr: {\n    type: String,\n    required: true\n  },\n  tokenId: {\n    type: String,\n    required: true\n  },\n  price: {\n    type: String\n  },\n  metadata: {\n    imageUrl:String,\n    name:String,\n    description:String,\n    externalLink:String\n  },\n  tokenUri:String\n});\n\nconst adminRegiterSchema = new mongoose.Schema({\n  walletAddress: {\n    type: String,\n    required: true\n  }\n});\n\nconst uploadSliderSchema = new mongoose.Schema({\n  slider:String,\n  imageUrl: {\n    type: String,\n    required: true\n  },\n  link:String\n});\n\nconst userModel = mongoose.model('user', userSchema);\nconst collectionModel = mongoose.model('collection', collectionSchema);\nconst viewAndLikeModel = mongoose.model('viewAndLike', viewAndLikeSchema);\nconst nftControllerModel = mongoose.model('nftController', nftControllerSchema);\nconst adminRegisterModel = mongoose.model('Admins', adminRegiterSchema);\nconst uploadSliderModel = mongoose.model('slider', uploadSliderSchema);\n\nconst models = {\n  userModel,\n  collectionModel,\n  viewAndLikeModel,\n  nftControllerModel,\n  adminRegisterModel,\n  uploadSliderModel\n};\n\nexport default models;\n"],"file":"index.js"}