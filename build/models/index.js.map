{"version":3,"sources":["../../src/models/index.js"],"names":["userSchema","mongoose","Schema","address","type","String","required","unique","userName","description","avatar","background","twitter","facebook","instagram","follower","Array","following","auction","Boolean","isVerified","default","timestamps","collectionSchema","name","owner","nftAddress","externalUrl","tokens","category","noOfOwner","Number","viewAndLikeSchema","tokenAddr","tokenId","views","likes","viewedAddresses","likedAccounts","nftControllerSchema","price","metadata","imageUrl","externalLink","tokenUri","selectedCat","status","featured","chainId","Object","relatedCollectionId","isOnSell","isOnAuction","nftBidSchema","startTime","Date","now","endTime","bid","adminRegiterSchema","walletAddress","email","notificationSchema","text","color","textColor","show","uploadSliderSchema","slider","link","uploadfeatureSchema","collection_name","userModel","model","collectionModel","viewAndLikeModel","nftControllerModel","adminRegisterModel","uploadSliderModel","uploadfeaturemodel","notificationmodel","nftBidmodel","models"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\r\n// mongoose.connect('mongodb://localhost:27017/default', {useNewUrlParser: true, useUnifiedTopology: true});\r\nimport { timeStamp } from '~/utils/helpers';\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  address: {\r\n    type: String,\r\n    required: true,\r\n    unique: true\r\n  },\r\n  userName: {\r\n    type: String,\r\n  },\r\n  description: {\r\n    type: String\r\n  },\r\n  avatar: {\r\n    type: String\r\n  },\r\n  background: {\r\n    type: String\r\n  },\r\n  twitter: {\r\n    type: String\r\n  },\r\n  facebook: {\r\n    type: String\r\n  },\r\n  instagram: {\r\n    type: String\r\n  },\r\n  \r\n  follower:Array,\r\n  following:Array,\r\n  auction:Boolean,\r\n  isVerified:{type:Boolean,default:false}\r\n},{timestamps: true});\r\n\r\nconst collectionSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  avatar: {\r\n    type: String,\r\n  },\r\n  background: {\r\n    type: String\r\n  },\r\n  owner: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  nftAddress: {\r\n    type: String\r\n  },\r\n  description: {\r\n    type: String\r\n  },\r\n  externalUrl: {\r\n    type: String\r\n  },\r\n  tokens: {\r\n    type: Array\r\n  },\r\n  isVerified:{type:Boolean,default:false},\r\n  category:{type:String,default:\"utlity\"},\r\n  noOfOwner:Number\r\n},{timestamps: true});\r\n\r\nconst viewAndLikeSchema = new mongoose.Schema({\r\n  tokenAddr: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  tokenId: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  views: {\r\n    type: Number\r\n  },\r\n  likes: {\r\n    type: Number\r\n  },\r\n  viewedAddresses: [String],\r\n  likedAccounts: {\r\n    type: [String]\r\n  }\r\n},{timestamps: true});\r\n\r\nconst nftControllerSchema = new mongoose.Schema({\r\n  tokenAddr: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  tokenId: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  price: {\r\n    type: Number\r\n  },\r\n  owner: {\r\n    type: String\r\n  },\r\n  metadata: {\r\n    imageUrl:String,\r\n    name:String,\r\n    description:String,\r\n    externalLink:String\r\n  },\r\n  tokenUri:String,\r\n  selectedCat:String,\r\n  status:String,\r\n  featured:{type:Boolean,default:false},\r\n  chainId:Object,\r\n  relatedCollectionId:String,\r\n  isOnSell:{type:Boolean,default:false},\r\n  isOnAuction:{type:Boolean},\r\n  auction:{type:Object}\r\n},{timestamps: true});\r\n\r\nconst nftBidSchema = new mongoose.Schema({\r\n  tokenAddr: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  tokenId: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  startTime: {type: Date, default: Date.now()},\r\n  endTime:{type: Date},\r\n  bid:{type:Array}\r\n},{timestamps: true});\r\n\r\nconst adminRegiterSchema = new mongoose.Schema({\r\n  walletAddress: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true\r\n  }\r\n},{timestamps: true});\r\n\r\nconst notificationSchema = new mongoose.Schema({\r\n  text:String,\r\n  color:String,\r\n  textColor:String,\r\n  show:Boolean\r\n},{timestamps: true});\r\n\r\nconst uploadSliderSchema = new mongoose.Schema({\r\n  slider:String,\r\n  imageUrl: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  link:String\r\n},{timestamps: true});\r\n\r\nconst uploadfeatureSchema = new mongoose.Schema({\r\n  collection_name:String,\r\n  imageUrl: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  link:String\r\n},{timestamps: true});\r\n\r\nconst userModel = mongoose.model('user', userSchema);\r\nconst collectionModel = mongoose.model('collection', collectionSchema);\r\nconst viewAndLikeModel = mongoose.model('viewAndLike', viewAndLikeSchema);\r\nconst nftControllerModel = mongoose.model('nftController', nftControllerSchema);\r\nconst adminRegisterModel = mongoose.model('Admins', adminRegiterSchema);\r\nconst uploadSliderModel = mongoose.model('slider', uploadSliderSchema);\r\nconst uploadfeaturemodel = mongoose.model('featurecollection', uploadfeatureSchema);\r\nconst notificationmodel = mongoose.model('notification', notificationSchema);\r\nconst nftBidmodel = mongoose.model('nftbid', nftBidSchema);\r\n\r\nconst models = {\r\n  userModel,\r\n  collectionModel,\r\n  viewAndLikeModel,\r\n  nftControllerModel,\r\n  adminRegisterModel,\r\n  uploadSliderModel,\r\n  uploadfeaturemodel,\r\n  notificationmodel,\r\n  nftBidmodel\r\n};\r\n\r\nexport default models;\r\n"],"file":"index.js"}